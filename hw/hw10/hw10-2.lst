GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  sets I Product /i1*i2/,
   2  J Part /j1*j5/;
   3   
   4  table
   5  Data(*,*)
   6      j1      j2      j3      j4      j5      l       q       d
   7  c   10      30      10      100     50
   8  v    1       8       2       30     10
   9  i1  10       5       5        1      1      500     1200    10
  10  i2   8       5       0        2      1      600     3000    20;
  11   
  12  parameters
  13  a(i,j) how many part j needed to make a unit of product i
  14  c(j) cost of procuring a unit of part j
  15  v(j) salvage value of a unit of part j
  16  l(i) manufacturing cost of a unit of product i
  17  q(i) selling price of a unit of product i,
  18  md(i) mean demand of product i;
  19   
  20  a(i,j) = Data(i,j);
  21  c(j) = Data('c',j);
  22  v(j) = Data('v',j);
  23  l(i) = Data(i,'l');
  24  q(i) = Data(i,'q');
  25  md(i) = Data(i,'d');
  26   
  27  positive variables
  28  x(i) how many products i in I to produce and sell,
  29  y(j) how many parts j in J to order,
  30  z(j) how many parts j in J are not used (salvaged);
  31   
  32  variables
  33  profit;
  34   
  35  equations
  36  obj, res_cons, demand_cons, salvage_cons;
  37   
  38  obj..
  39      profit =e= sum(i, (q(i)-l(i))*x(i)) - sum(j, c(j)*y(j) - v(j)*z(j));
  40   
  41  res_cons(j)..
  42      sum(i, a(i, j)*x(i)) =l= y(j) - z(j);
  43   
  44  demand_cons(i)..
  45      x(i) =l= md(i);
  46   
  47  salvage_cons(j)..
  48      z(j) =l= y(j) - sum(i, a(i, j)*x(i));
  49   
  50  model multi_product / obj, res_cons, demand_cons, salvage_cons /;
  51  solve multi_product using mip maximize profit;
  52   
  53  set R / 1*9 /;
  54   
  55  table cd(i,r,*)
  56      1.v     1.p     2.v     2.p     3.v     3.p
  57  i1  5.00    0.1     10.0    0.2     12.0    0.7
  58  i2  17.0    0.1     20.0    0.2     25.0    0.7
  59  ;
  60   
  61  parameters
  62  prob(r), d(i, r);
  63   
  64  prob('1') = cd('i1', '1', 'p')*cd('i2', '1', 'p');
  65  prob('2') = cd('i1', '1', 'p')*cd('i2', '2', 'p');
  66  prob('3') = cd('i1', '1', 'p')*cd('i2', '3', 'p');
  67  prob('4') = cd('i1', '2', 'p')*cd('i2', '1', 'p');
  68  prob('5') = cd('i1', '2', 'p')*cd('i2', '2', 'p');
  69  prob('6') = cd('i1', '2', 'p')*cd('i2', '3', 'p');
  70  prob('7') = cd('i1', '3', 'p')*cd('i2', '1', 'p');
  71  prob('8') = cd('i1', '3', 'p')*cd('i2', '2', 'p');
  72  prob('9') = cd('i1', '3', 'p')*cd('i2', '3', 'p');
  73   
  74  d('i1', '1') = cd('i1', '1', 'v');
  75  d('i1', '2') = cd('i1', '1', 'v');
  76  d('i1', '3') = cd('i1', '1', 'v');
  77  d('i1', '4') = cd('i1', '2', 'v');
  78  d('i1', '5') = cd('i1', '2', 'v');
  79  d('i1', '6') = cd('i1', '2', 'v');
  80  d('i1', '7') = cd('i1', '3', 'v');
  81  d('i1', '8') = cd('i1', '3', 'v');
  82  d('i1', '9') = cd('i1', '3', 'v');
  83  d('i2', '1') = cd('i2', '1', 'v');
  84  d('i2', '2') = cd('i2', '2', 'v');
  85  d('i2', '3') = cd('i2', '3', 'v');
  86  d('i2', '4') = cd('i2', '1', 'v');
  87  d('i2', '5') = cd('i2', '2', 'v');
  88  d('i2', '6') = cd('i2', '3', 'v');
  89  d('i2', '7') = cd('i2', '1', 'v');
  90  d('i2', '8') = cd('i2', '2', 'v');
  91  d('i2', '9') = cd('i2', '3', 'v');
  92   
  93  positive variables
  94  x_scen(i, r) how many products i in I to produce and sell in each scenario r in R;
  95   
  96  variables
  97  profit_scen;
  98   
  99  equations
 100  obj_scen, res_cons_scen, demand_cons_scen, salvage_cons_scen;
 101   
 102  obj_scen..
 103      profit_scen =e= sum((i, r), prob(r)*(q(i)-l(i))*x_scen(i, r)) - sum(j, c(j)*y(j) - v(j)*z(j));
 104   
 105  res_cons_scen(j, r)..
 106      sum(i, a(i, j)*x_scen(i, r)) =l= y(j) - z(j);
 107   
 108  demand_cons_scen(i, r)..
 109      x_scen(i, r) =l= d(i, r);
 110   
 111  salvage_cons_scen(j, r)..
 112      z(j) =l= y(j) - sum(i, a(i, j)*x_scen(i, r));
 113   
 114  model multi_product_scen / obj_scen, res_cons_scen, demand_cons_scen, salvage_cons_scen /;
 115  solve multi_product_scen using mip maximize profit_scen;
 116   
 117  display profit_scen.l;
 118   
FUNCLIBIN  stolib stodclib
Function Library stolib
Random deviates, probability density function, cumulative distribution function, inverse cumulative distribution function
GAMS Development Corporation

Mod. Function                          Description
Type

none SetSeed(SEED)                     Define the seed for random number generator
none dUniform(LOW,HIGH)                Uniform distribution
DNLP pdfUniform(x,LOW,HIGH)            Probability density function for uniform distribution
DNLP cdfUniform(x,LOW,HIGH)            Cumulative distribution function for uniform distribution
DNLP icdfUniform(x,LOW,HIGH)           Inverse cumulative distribution function for uniform distribution
none dNormal(MEAN,STD_DEV)             Normal distribution
NLP  pdfNormal(x,MEAN,STD_DEV)         Probability density function for normal distribution
NLP  cdfNormal(x,MEAN,STD_DEV)         Cumulative distribution function for normal distribution
NLP  icdfNormal(x,MEAN,STD_DEV)        Inverse cumulative distribution function for normal distribution
none dInvGaussian(MEAN,SHAPE)          Inverse Gaussian distribution
NLP  pdfInvGaussian(x,MEAN,SHAPE)      Probability density function for inverse Gaussian distribution
NLP  cdfInvGaussian(x,MEAN,SHAPE)      Cumulative distribution function for inverse Gaussian distribution
NLP  icdfInvGaussian(x,MEAN,SHAPE)     Inverse cumulative distribution function for inverse Gaussian distribution
none dRayleigh(SIGMA)                  Rayleigh distribution
NLP  pdfRayleigh(x,SIGMA)              Probability density function for Rayleigh distribution
NLP  cdfRayleigh(x,SIGMA)              Cumulative distribution function for Rayleigh distribution
NLP  icdfRayleigh(x,SIGMA)             Inverse cumulative distribution function for Rayleigh distribution
none dCauchy(LOCATION,SCALE)           Cauchy distribution
NLP  pdfCauchy(x,LOCATION,SCALE)       Probability density function for Cauchy distribution
NLP  cdfCauchy(x,LOCATION,SCALE)       Cumulative distribution function for Cauchy distribution
NLP  icdfCauchy(x,LOCATION,SCALE)      Inverse cumulative distribution function for Cauchy distribution
none dLognormal(LOCATION,SCALE)        Lognormal distribution
NLP  pdfLognormal(x,LOCATION,SCALE)    Probability density function for Lognormal distribution
NLP  cdfLognormal(x,LOCATION,SCALE)    Cumulative distribution function for Lognormal distribution
NLP  icdfLognormal(x,LOCATION,SCALE)   Inverse cumulative distribution function for Lognormal distribution
none dExponential(LAMBDA)              Exponential distribution
NLP  pdfExponential(x,LAMBDA)          Probability density function for Exponential distribution
NLP  cdfExponential(x,LAMBDA)          Cumulative distribution function for Exponential distribution
NLP  icdfExponential(x,LAMBDA)         Inverse cumulative distribution function for Exponential distribution
none dLogistic(LOCATION,SCALE)         Logistic distribution
NLP  pdfLogistic(x,LOCATION,SCALE)     Probability density function for Logistic distribution
NLP  cdfLogistic(x,LOCATION,SCALE)     Cumulative distribution function for Logistic distribution
NLP  icdfLogistic(x,LOCATION,SCALE)    Inverse cumulative distribution function for Logistic distribution
none dGamma(SHAPE,SCALE)               Gamma distribution
NLP  pdfGamma(x,SHAPE,SCALE)           Probability density function for Gamma distribution
NLP  cdfGamma(x,SHAPE,SCALE)           Cumulative distribution function for Gamma distribution
NLP  icdfGamma(x,SHAPE,SCALE)          Inverse cumulative distribution function for Gamma distribution
none dChiSquare(DF)                    Chi square distribution
NLP  pdfChiSquare(x,DF)                Probability density function for Chi square distribution
NLP  cdfChiSquare(x,DF)                Cumulative distribution function for Chi square distribution
NLP  icdfChiSquare(x,DF)               Inverse cumulative distribution function for Chi square distribution
none dWeibull(SHAPE,SCALE)             Weibull distribution
NLP  pdfWeibull(x,SHAPE,SCALE)         Probability density function for Weibull distribution
NLP  cdfWeibull(x,SHAPE,SCALE)         Cumulative distribution function for Weibull distribution
NLP  icdfWeibull(x,SHAPE,SCALE)        Inverse cumulative distribution function for Weibull distribution
none dBeta(SHAPE_1,SHAPE_2)            Beta distribution
NLP  pdfBeta(x,SHAPE_1,SHAPE_2)        Probability density function for Beta distribution
NLP  cdfBeta(x,SHAPE_1,SHAPE_2)        Cumulative distribution function for Beta distribution
NLP  icdfBeta(x,SHAPE_1,SHAPE_2)       Inverse cumulative distribution function for Beta distribution
none dF(DF_1,DF_2)                     F distribution
NLP  pdfF(x,DF_1,DF_2)                 Probability density function for F distribution
NLP  cdfF(x,DF_1,DF_2)                 Cumulative distribution function for F distribution
NLP  icdfF(x,DF_1,DF_2)                Inverse cumulative distribution function for F distribution
none dStudentT(DF)                     Students T distribution
NLP  pdfStudentT(x,DF)                 Probability density function for Students T distribution
NLP  cdfStudentT(x,DF)                 Cumulative distribution function for Students T distribution
NLP  icdfStudentT(x,DF)                Inverse cumulative distribution function for Students T distribution
none dPareto(SCALE,SHAPE)              Pareto distribution
NLP  pdfPareto(x,SCALE,SHAPE)          Probability density function for Pareto distribution
NLP  cdfPareto(x,SCALE,SHAPE)          Cumulative distribution function for Pareto distribution
NLP  icdfPareto(x,SCALE,SHAPE)         Inverse cumulative distribution function for Pareto distribution
none dGumbel(LOCATION,SCALE)           Gumbel distribution
NLP  pdfGumbel(x,LOCATION,SCALE)       Probability density function for Gumbel distribution
NLP  cdfGumbel(x,LOCATION,SCALE)       Cumulative distribution function for Gumbel distribution
NLP  icdfGumbel(x,LOCATION,SCALE)      Inverse cumulative distribution function for Gumbel distribution
none dLaplace(MEAN,SCALE)              Laplace distribution
DNLP pdfLaplace(x,MEAN,SCALE)          Probability density function for Laplace distribution
DNLP cdfLaplace(x,MEAN,SCALE)          Cumulative distribution function for Laplace distribution
DNLP icdfLaplace(x,MEAN,SCALE)         Inverse cumulative distribution function for Laplace distribution
none dTriangular(LOW,MID,HIGH)         Triangular distribution
DNLP pdfTriangular(x,LOW,MID,HIGH)     Probability density function for Triangular distribution
DNLP cdfTriangular(x,LOW,MID,HIGH)     Cumulative distribution function for Triangular distribution
DNLP icdfTriangular(x,LOW,MID,HIGH)    Inverse cumulative distribution function for Triangular distribution
none dUniformInt(LOW,HIGH)             Uniform integer distribution
none pdfUniformInt(x,LOW,HIGH)         Probability density function for Uniform integer distribution
none cdfUniformInt(x,LOW,HIGH)         Cumulative distribution function for Uniform integer distribution
none icdfUniformInt(x,LOW,HIGH)        Inverse cumulative distribution function for Uniform integer distribution
none dBinomial(N,P)                    Binomial distribution
none pdfBinomial(x,N,P)                Probability density function for Binomial distribution
none cdfBinomial(x,N,P)                Cumulative distribution function for Binomial distribution
none icdfBinomial(x,N,P)               Inverse cumulative distribution function for Binomial distribution
none dNegBinomial(FAILURES,P)          Negative Binomial distribution
none pdfNegBinomial(x,FAILURES,P)      Probability density function for Negative Binomial distribution
none cdfNegBinomial(x,FAILURES,P)      Cumulative distribution function for Negative Binomial distribution
none icdfNegBinomial(x,FAILURES,P)     Inverse cumulative distribution function for Negative Binomial distribution
none dGeometric(P)                     Geometric distribution
none pdfGeometric(x,P)                 Probability density function for Geometric distribution
none cdfGeometric(x,P)                 Cumulative distribution function for Geometric distribution
none icdfGeometric(x,P)                Inverse cumulative distribution function for Geometric distribution
none dHyperGeo(TOTAL,GOOD,TRIALS)      HyperGeometric distribution
none pdfHyperGeo(x,TOTAL,GOOD,TRIALS)  Probability density function for HyperGeometric distribution
none cdfHyperGeo(x,TOTAL,GOOD,TRIALS)  Cumulative distribution function for HyperGeometric distribution
none icdfHyperGeo(x,TOTAL,GOOD,TRIALS) Inverse cumulative distribution function for HyperGeometric distribution
none dLogarithmic(P-FACTOR)            Logarithmic distribution
none pdfLogarithmic(x,P-FACTOR)        Probability density function for Logarithmic distribution
none cdfLogarithmic(x,P-FACTOR)        Cumulative distribution function for Logarithmic distribution
none icdfLogarithmic(x,P-FACTOR)       Inverse cumulative distribution function for Logarithmic distribution
none dPoisson(LAMBDA)                  Poisson distribution
none pdfPoisson(x,LAMBDA)              Probability density function for Poisson distribution
none cdfPoisson(x,LAMBDA)              Cumulative distribution function for Poisson distribution
none icdfPoisson(x,LAMBDA)             Inverse cumulative distribution function for Poisson distribution

 120  functions
 121  randpoisson /stolib.dpoisson/,
 122  setseedh /stolib.SetSeed /;
 123   
 124  scalar seedno;
 125  seedno=setseedh(39183);
 126   
 128  set S scenarios / s1*s100 /;
 129   
 130  parameters
 131  d_pois(i, s) demand of product i in scenario s,
 132  prob_pois(s) scenario probability;
 133  d_pois('i1',s) = randpoisson(10);
 134  d_pois('i2',s) = randpoisson(20);
 135  prob_pois(s) = 1/card(s);
 136   
 137  positive variables
 138  x_pois(i, s);
 139   
 140  variables
 141  profit_pois;
 142   
 143  equations obj_pois, demand_cons_pois;
 144   
 145  obj_pois..
 146      profit_pois =e= sum((i, r), prob(r)*(q(i)-l(i))*x_scen(i, r)) - sum(j, c(j)*y(j) - v(j)*z(j));
 147   
 148  demand_cons_pois(i, s)..
 149      x_pois(i, s) =l= d_pois(i, s);
 150   
 151  model multi_product_pois / obj_pois, res_cons_scen, demand_cons_pois, salvage_cons_scen  /;
 152   
 153  set numScenarios / 100, 200, 400, 800, 1600, 10000 /,
 154  scen(s);
 155  parameter results(numScenarios, *) Objective and first stage variables;
 156   
 157  scalar NSCEN;
 158  *loop(numScenarios,
 159  *    NSCEN = card(numScenarios);
 160  *    display NSCEN;
 161  *    solve multi_product_pois using mip maximize profit_pois;
 162  *    results(numScenarios, 'obj') = profit_scen.l;
 163  *);
 164   
 165  loop(numScenarios,
 166      NSCEN = card(numScenarios);
 167      scen(s)$(ord(s) > NSCEN) = no;
 168      solve multi_product_pois using mip maximize profit_pois;
 169      results(numScenarios, 'obj') = profit_pois.l;
 170  );
 171   
 172  display results;
 173   
 174   
 175   
 176   
 177   
 178   
 179   
 180   
 181   
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\Rocke\OneDrive\Documents\isye524\hw\hw10\hw10-2.gms
     2      119 FUNCLIBIN      1     119  stodclib


COMPILATION TIME     =        0.000 SECONDS      3 MB  45.1.0 88bbff72 WEX-WEI
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE multi_product Using MIP From line 51


---- obj  =E=  

obj..  - 700*x(i1) - 2400*x(i2) + 10*y(j1) + 30*y(j2) + 10*y(j3) + 100*y(j4) + 50*y(j5) - z(j1) - 8*z(j2) - 2*z(j3) - 30*z(j4) - 10*z(j5) + profit =E= 0 ; (LHS = 0)
     

---- res_cons  =L=  

res_cons(j1)..  10*x(i1) + 8*x(i2) - y(j1) + z(j1) =L= 0 ; (LHS = 0)
     
res_cons(j2)..  5*x(i1) + 5*x(i2) - y(j2) + z(j2) =L= 0 ; (LHS = 0)
     
res_cons(j3)..  5*x(i1) - y(j3) + z(j3) =L= 0 ; (LHS = 0)
     
REMAINING 2 ENTRIES SKIPPED


---- demand_cons  =L=  

demand_cons(i1)..  x(i1) =L= 10 ; (LHS = 0)
     
demand_cons(i2)..  x(i2) =L= 20 ; (LHS = 0)
     

---- salvage_cons  =L=  

salvage_cons(j1)..  10*x(i1) + 8*x(i2) - y(j1) + z(j1) =L= 0 ; (LHS = 0)
     
salvage_cons(j2)..  5*x(i1) + 5*x(i2) - y(j2) + z(j2) =L= 0 ; (LHS = 0)
     
salvage_cons(j3)..  5*x(i1) - y(j3) + z(j3) =L= 0 ; (LHS = 0)
     
REMAINING 2 ENTRIES SKIPPED

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE multi_product Using MIP From line 51


---- x  how many products i in I to produce and sell

x(i1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
     -700       obj
       10       res_cons(j1)
        5       res_cons(j2)
        5       res_cons(j3)
        1       res_cons(j4)
        1       res_cons(j5)
        1       demand_cons(i1)
       10       salvage_cons(j1)
        5       salvage_cons(j2)
        5       salvage_cons(j3)
        1       salvage_cons(j4)
        1       salvage_cons(j5)

x(i2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
    -2400       obj
        8       res_cons(j1)
        5       res_cons(j2)
        2       res_cons(j4)
        1       res_cons(j5)
        1       demand_cons(i2)
        8       salvage_cons(j1)
        5       salvage_cons(j2)
        2       salvage_cons(j4)
        1       salvage_cons(j5)


---- y  how many parts j in J to order

y(j1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       10       obj
       -1       res_cons(j1)
       -1       salvage_cons(j1)

y(j2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       30       obj
       -1       res_cons(j2)
       -1       salvage_cons(j2)

y(j3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       10       obj
       -1       res_cons(j3)
       -1       salvage_cons(j3)

REMAINING 2 ENTRIES SKIPPED

---- z  how many parts j in J are not used (salvaged)

z(j1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -1       obj
        1       res_cons(j1)
        1       salvage_cons(j1)

z(j2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -8       obj
        1       res_cons(j2)
        1       salvage_cons(j2)

z(j3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -2       obj
        1       res_cons(j3)
        1       salvage_cons(j3)

REMAINING 2 ENTRIES SKIPPED

---- profit  

profit
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Range Statistics    SOLVE multi_product Using MIP From line 51


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 1.000E+01, 2.000E+01] - Zero values observed as well
Bound     [min, max] : [        NA,        NA] - Zero values observed as well
Matrix    [min, max] : [ 1.000E+00, 2.400E+03]

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE multi_product Using MIP From line 51


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS           13
BLOCKS OF VARIABLES           4     SINGLE VARIABLES           13
NON ZERO ELEMENTS            53


GENERATION TIME      =        0.015 SECONDS      4 MB  45.1.0 88bbff72 WEX-WEI
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 7
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE multi_product Using MIP From line 51


               S O L V E      S U M M A R Y

     MODEL   multi_product       OBJECTIVE  profit
     TYPE    MIP                 DIRECTION  MAXIMIZE
     SOLVER  CPLEX               FROM LINE  51

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE            40900.0000

 RESOURCE USAGE, LIMIT          0.000 10000000000.000
 ITERATION COUNT, LIMIT         0    2147483647
--- GAMS/CPLEX licensed for continuous and discrete problems.
--- GMO setup time: 0.00s
--- GMO memory 0.50 Mb (peak 0.50 Mb)
--- Dictionary memory 0.00 Mb
--- Cplex 22.1.1.0 link memory 0.00 Mb (peak 0.00 Mb)
--- Starting Cplex


--- LP status (1): optimal.
--- Cplex Time: 0.00sec (det. 0.01 ticks)


Optimal solution found
Objective:        40900.000000


                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU obj                 .              .              .             1.0000      

---- EQU res_cons  

          LOWER          LEVEL          UPPER         MARGINAL

j1        -INF             .              .              .          
j2        -INF             .              .              .          
j3        -INF             .              .              .          
j4        -INF             .              .              .          
j5        -INF             .              .              .          

---- EQU demand_cons  

          LOWER          LEVEL          UPPER         MARGINAL

i1        -INF           10.0000        10.0000       250.0000      
i2        -INF           20.0000        20.0000      1920.0000      

---- EQU salvage_cons  

          LOWER          LEVEL          UPPER         MARGINAL

j1        -INF             .              .            10.0000      
j2        -INF             .              .            30.0000      
j3        -INF             .              .            10.0000      
j4        -INF             .              .           100.0000      
j5        -INF             .              .            50.0000      

---- VAR x  how many products i in I to produce and sell

          LOWER          LEVEL          UPPER         MARGINAL

i1          .            10.0000        +INF             .          
i2          .            20.0000        +INF             .          

---- VAR y  how many parts j in J to order

          LOWER          LEVEL          UPPER         MARGINAL

j1          .           260.0000        +INF             .          
j2          .           150.0000        +INF             .          
j3          .            50.0000        +INF             .          
j4          .            50.0000        +INF             .          
j5          .            30.0000        +INF             .          

---- VAR z  how many parts j in J are not used (salvaged)

          LOWER          LEVEL          UPPER         MARGINAL

j1          .              .            +INF           -9.0000      
j2          .              .            +INF          -22.0000      
j3          .              .            +INF           -8.0000      
j4          .              .            +INF          -70.0000      
j5          .              .            +INF          -40.0000      

                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR profit            -INF        40900.0000        +INF             .          


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 8
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE multi_product_scen Using MIP From line 115


---- obj_scen  =E=  

obj_scen..  10*y(j1) + 30*y(j2) + 10*y(j3) + 100*y(j4) + 50*y(j5) - z(j1) - 8*z(j2) - 2*z(j3) - 30*z(j4) - 10*z(j5) - 7*x_scen(i1,1) - 14*x_scen(i1,2) - 49*x_scen(i1,3) - 14*x_scen(i1,4) - 28*x_scen(i1,5) - 98*x_scen(i1,6) - 49*x_scen(i1,7) - 98*x_scen(i1,8) - 343*x_scen(i1,9) - 24*x_scen(i2,1) - 48*x_scen(i2,2) - 168*x_scen(i2,3) - 48*x_scen(i2,4) - 96*x_scen(i2,5) - 336*x_scen(i2,6) - 168*x_scen(i2,7) - 336*x_scen(i2,8) - 1176*x_scen(i2,9) + profit_scen =E= 0 ; (LHS = 14100, INFES = 14100 ****)
     

---- res_cons_scen  =L=  

res_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -260)
     
res_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -260)
     
res_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -260)
     
REMAINING 42 ENTRIES SKIPPED


---- demand_cons_scen  =L=  

demand_cons_scen(i1,1)..  x_scen(i1,1) =L= 5 ; (LHS = 0)
     
demand_cons_scen(i1,2)..  x_scen(i1,2) =L= 5 ; (LHS = 0)
     
demand_cons_scen(i1,3)..  x_scen(i1,3) =L= 5 ; (LHS = 0)
     
REMAINING 15 ENTRIES SKIPPED


---- salvage_cons_scen  =L=  

salvage_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -260)
     
salvage_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -260)
     
salvage_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -260)
     
REMAINING 42 ENTRIES SKIPPED

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 9
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE multi_product_scen Using MIP From line 115


---- y  how many parts j in J to order

y(j1)
                (.LO, .L, .UP, .M = 0, 260, +INF, 0)
       10       obj_scen
       -1       res_cons_scen(j1,1)
       -1       res_cons_scen(j1,2)
       -1       res_cons_scen(j1,3)
       -1       res_cons_scen(j1,4)
       -1       res_cons_scen(j1,5)
       -1       res_cons_scen(j1,6)
       -1       res_cons_scen(j1,7)
       -1       res_cons_scen(j1,8)
       -1       res_cons_scen(j1,9)
       -1       salvage_cons_scen(j1,1)
       -1       salvage_cons_scen(j1,2)
       -1       salvage_cons_scen(j1,3)
       -1       salvage_cons_scen(j1,4)
       -1       salvage_cons_scen(j1,5)
       -1       salvage_cons_scen(j1,6)
       -1       salvage_cons_scen(j1,7)
       -1       salvage_cons_scen(j1,8)
       -1       salvage_cons_scen(j1,9)

y(j2)
                (.LO, .L, .UP, .M = 0, 150, +INF, 0)
       30       obj_scen
       -1       res_cons_scen(j2,1)
       -1       res_cons_scen(j2,2)
       -1       res_cons_scen(j2,3)
       -1       res_cons_scen(j2,4)
       -1       res_cons_scen(j2,5)
       -1       res_cons_scen(j2,6)
       -1       res_cons_scen(j2,7)
       -1       res_cons_scen(j2,8)
       -1       res_cons_scen(j2,9)
       -1       salvage_cons_scen(j2,1)
       -1       salvage_cons_scen(j2,2)
       -1       salvage_cons_scen(j2,3)
       -1       salvage_cons_scen(j2,4)
       -1       salvage_cons_scen(j2,5)
       -1       salvage_cons_scen(j2,6)
       -1       salvage_cons_scen(j2,7)
       -1       salvage_cons_scen(j2,8)
       -1       salvage_cons_scen(j2,9)

y(j3)
                (.LO, .L, .UP, .M = 0, 50, +INF, 0)
       10       obj_scen
       -1       res_cons_scen(j3,1)
       -1       res_cons_scen(j3,2)
       -1       res_cons_scen(j3,3)
       -1       res_cons_scen(j3,4)
       -1       res_cons_scen(j3,5)
       -1       res_cons_scen(j3,6)
       -1       res_cons_scen(j3,7)
       -1       res_cons_scen(j3,8)
       -1       res_cons_scen(j3,9)
       -1       salvage_cons_scen(j3,1)
       -1       salvage_cons_scen(j3,2)
       -1       salvage_cons_scen(j3,3)
       -1       salvage_cons_scen(j3,4)
       -1       salvage_cons_scen(j3,5)
       -1       salvage_cons_scen(j3,6)
       -1       salvage_cons_scen(j3,7)
       -1       salvage_cons_scen(j3,8)
       -1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- z  how many parts j in J are not used (salvaged)

z(j1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -9)
       -1       obj_scen
        1       res_cons_scen(j1,1)
        1       res_cons_scen(j1,2)
        1       res_cons_scen(j1,3)
        1       res_cons_scen(j1,4)
        1       res_cons_scen(j1,5)
        1       res_cons_scen(j1,6)
        1       res_cons_scen(j1,7)
        1       res_cons_scen(j1,8)
        1       res_cons_scen(j1,9)
        1       salvage_cons_scen(j1,1)
        1       salvage_cons_scen(j1,2)
        1       salvage_cons_scen(j1,3)
        1       salvage_cons_scen(j1,4)
        1       salvage_cons_scen(j1,5)
        1       salvage_cons_scen(j1,6)
        1       salvage_cons_scen(j1,7)
        1       salvage_cons_scen(j1,8)
        1       salvage_cons_scen(j1,9)

z(j2)
                (.LO, .L, .UP, .M = 0, 0, +INF, -22)
       -8       obj_scen
        1       res_cons_scen(j2,1)
        1       res_cons_scen(j2,2)
        1       res_cons_scen(j2,3)
        1       res_cons_scen(j2,4)
        1       res_cons_scen(j2,5)
        1       res_cons_scen(j2,6)
        1       res_cons_scen(j2,7)
        1       res_cons_scen(j2,8)
        1       res_cons_scen(j2,9)
        1       salvage_cons_scen(j2,1)
        1       salvage_cons_scen(j2,2)
        1       salvage_cons_scen(j2,3)
        1       salvage_cons_scen(j2,4)
        1       salvage_cons_scen(j2,5)
        1       salvage_cons_scen(j2,6)
        1       salvage_cons_scen(j2,7)
        1       salvage_cons_scen(j2,8)
        1       salvage_cons_scen(j2,9)

z(j3)
                (.LO, .L, .UP, .M = 0, 0, +INF, -8)
       -2       obj_scen
        1       res_cons_scen(j3,1)
        1       res_cons_scen(j3,2)
        1       res_cons_scen(j3,3)
        1       res_cons_scen(j3,4)
        1       res_cons_scen(j3,5)
        1       res_cons_scen(j3,6)
        1       res_cons_scen(j3,7)
        1       res_cons_scen(j3,8)
        1       res_cons_scen(j3,9)
        1       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j3,4)
        1       salvage_cons_scen(j3,5)
        1       salvage_cons_scen(j3,6)
        1       salvage_cons_scen(j3,7)
        1       salvage_cons_scen(j3,8)
        1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- x_scen  how many products i in I to produce and sell in each scenario r in R

x_scen(i1,1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
       -7       obj_scen
       10       res_cons_scen(j1,1)
        5       res_cons_scen(j2,1)
        5       res_cons_scen(j3,1)
        1       res_cons_scen(j4,1)
        1       res_cons_scen(j5,1)
        1       demand_cons_scen(i1,1)
       10       salvage_cons_scen(j1,1)
        5       salvage_cons_scen(j2,1)
        5       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j4,1)
        1       salvage_cons_scen(j5,1)

x_scen(i1,2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
      -14       obj_scen
       10       res_cons_scen(j1,2)
        5       res_cons_scen(j2,2)
        5       res_cons_scen(j3,2)
        1       res_cons_scen(j4,2)
        1       res_cons_scen(j5,2)
        1       demand_cons_scen(i1,2)
       10       salvage_cons_scen(j1,2)
        5       salvage_cons_scen(j2,2)
        5       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j4,2)
        1       salvage_cons_scen(j5,2)

x_scen(i1,3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
      -49       obj_scen
       10       res_cons_scen(j1,3)
        5       res_cons_scen(j2,3)
        5       res_cons_scen(j3,3)
        1       res_cons_scen(j4,3)
        1       res_cons_scen(j5,3)
        1       demand_cons_scen(i1,3)
       10       salvage_cons_scen(j1,3)
        5       salvage_cons_scen(j2,3)
        5       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j4,3)
        1       salvage_cons_scen(j5,3)

REMAINING 15 ENTRIES SKIPPED

---- profit_scen  

profit_scen
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj_scen

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 10
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Range Statistics    SOLVE multi_product_scen Using MIP From line 115


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 5.000E+00, 2.500E+01] - Zero values observed as well
Bound     [min, max] : [        NA,        NA] - Zero values observed as well
Matrix    [min, max] : [ 1.000E+00, 1.176E+03]

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 11
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE multi_product_scen Using MIP From line 115


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS          109
BLOCKS OF VARIABLES           4     SINGLE VARIABLES           29
NON ZERO ELEMENTS           389


GENERATION TIME      =        0.000 SECONDS      4 MB  45.1.0 88bbff72 WEX-WEI
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 12
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE multi_product_scen Using MIP From line 115


               S O L V E      S U M M A R Y

     MODEL   multi_product_scen   OBJECTIVE  profit_scen
     TYPE    MIP                  DIRECTION  MAXIMIZE
     SOLVER  CPLEX                FROM LINE  115

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      1 Optimal
**** OBJECTIVE VALUE            46024.0000

 RESOURCE USAGE, LIMIT          0.016 10000000000.000
 ITERATION COUNT, LIMIT        16    2147483647
--- GAMS/CPLEX licensed for continuous and discrete problems.
--- GMO setup time: 0.00s
--- GMO memory 0.51 Mb (peak 0.51 Mb)
--- Dictionary memory 0.00 Mb
--- Cplex 22.1.1.0 link memory 0.00 Mb (peak 0.01 Mb)
--- Starting Cplex


--- LP status (1): optimal.
--- Cplex Time: 0.02sec (det. 0.16 ticks)


Optimal solution found
Objective:        46024.000000


                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU obj_scen            .              .              .             1.0000      

---- EQU res_cons_scen  

            LOWER          LEVEL          UPPER         MARGINAL

j1.1        -INF         -114.0000          .              .          
j1.2        -INF          -90.0000          .              .          
j1.3        -INF          -50.0000          .              .          
j1.4        -INF          -64.0000          .              .          
j1.5        -INF          -40.0000          .              .          
j1.6        -INF             .              .              .          
j1.7        -INF          -44.0000          .              .          
j1.8        -INF          -20.0000          .              .          
j1.9        -INF             .              .              .          
j2.1        -INF          -65.0000          .              .          
j2.2        -INF          -50.0000          .              .          
j2.3        -INF          -25.0000          .              .          
j2.4        -INF          -40.0000          .              .          
j2.5        -INF          -25.0000          .              .          
j2.6        -INF             .              .              .          
j2.7        -INF          -30.0000          .              .          
j2.8        -INF          -15.0000          .              .          
j2.9        -INF             .              .              .          
j3.1        -INF          -35.0000          .              .          
j3.2        -INF          -35.0000          .              .          
j3.3        -INF          -35.0000          .              .          
j3.4        -INF          -10.0000          .              .          
j3.5        -INF          -10.0000          .              .          
j3.6        -INF          -10.0000          .              .          
j3.7        -INF             .              .              .          
j3.8        -INF             .              .            10.0000      
j3.9        -INF          -10.0000          .              .          
j4.1        -INF          -21.0000          .              .          
j4.2        -INF          -15.0000          .              .          
j4.3        -INF           -5.0000          .              .          
j4.4        -INF          -16.0000          .              .          
j4.5        -INF          -10.0000          .              .          
j4.6        -INF             .              .            57.0000      
j4.7        -INF          -14.0000          .              .          
j4.8        -INF           -8.0000          .              .          
j4.9        -INF             .              .              .          
j5.1        -INF          -13.0000          .              .          
j5.2        -INF          -10.0000          .              .          
j5.3        -INF           -5.0000          .              .          
j5.4        -INF           -8.0000          .              .          
j5.5        -INF           -5.0000          .              .          
j5.6        -INF             .              .              .          
j5.7        -INF           -6.0000          .              .          
j5.8        -INF           -3.0000          .              .          
j5.9        -INF             .              .              .          

---- EQU demand_cons_scen  

            LOWER          LEVEL          UPPER         MARGINAL

i1.1        -INF            5.0000         5.0000         7.0000      
i1.2        -INF            5.0000         5.0000        14.0000      
i1.3        -INF            5.0000         5.0000        49.0000      
i1.4        -INF           10.0000        10.0000        14.0000      
i1.5        -INF           10.0000        10.0000        28.0000      
i1.6        -INF           10.0000        10.0000        41.0000      
i1.7        -INF           12.0000        12.0000        49.0000      
i1.8        -INF           12.0000        12.0000        48.0000      
i1.9        -INF           10.0000        12.0000          .          
i2.1        -INF           17.0000        17.0000        24.0000      
i2.2        -INF           20.0000        20.0000        48.0000      
i2.3        -INF           25.0000        25.0000       168.0000      
i2.4        -INF           17.0000        17.0000        48.0000      
i2.5        -INF           20.0000        20.0000        96.0000      
i2.6        -INF           25.0000        25.0000       222.0000      
i2.7        -INF           17.0000        17.0000       168.0000      
i2.8        -INF           20.0000        20.0000       336.0000      
i2.9        -INF           25.0000        25.0000       810.0000      

---- EQU salvage_cons_scen  

            LOWER          LEVEL          UPPER         MARGINAL

j1.1        -INF         -114.0000          .              .          
j1.2        -INF          -90.0000          .              .          
j1.3        -INF          -50.0000          .              .          
j1.4        -INF          -64.0000          .              .          
j1.5        -INF          -40.0000          .              .          
j1.6        -INF             .              .              .          
j1.7        -INF          -44.0000          .              .          
j1.8        -INF          -20.0000          .              .          
j1.9        -INF             .              .            10.0000      
j2.1        -INF          -65.0000          .              .          
j2.2        -INF          -50.0000          .              .          
j2.3        -INF          -25.0000          .              .          
j2.4        -INF          -40.0000          .              .          
j2.5        -INF          -25.0000          .              .          
j2.6        -INF             .              .              .          
j2.7        -INF          -30.0000          .              .          
j2.8        -INF          -15.0000          .              .          
j2.9        -INF             .              .            30.0000      
j3.1        -INF          -35.0000          .              .          
j3.2        -INF          -35.0000          .              .          
j3.3        -INF          -35.0000          .              .          
j3.4        -INF          -10.0000          .              .          
j3.5        -INF          -10.0000          .              .          
j3.6        -INF          -10.0000          .              .          
j3.7        -INF             .              .              .          
j3.8        -INF             .              .              .          
j3.9        -INF          -10.0000          .              .          
j4.1        -INF          -21.0000          .              .          
j4.2        -INF          -15.0000          .              .          
j4.3        -INF           -5.0000          .              .          
j4.4        -INF          -16.0000          .              .          
j4.5        -INF          -10.0000          .              .          
j4.6        -INF             .              .              .          
j4.7        -INF          -14.0000          .              .          
j4.8        -INF           -8.0000          .              .          
j4.9        -INF             .              .            43.0000      
j5.1        -INF          -13.0000          .              .          
j5.2        -INF          -10.0000          .              .          
j5.3        -INF           -5.0000          .              .          
j5.4        -INF           -8.0000          .              .          
j5.5        -INF           -5.0000          .              .          
j5.6        -INF             .              .              .          
j5.7        -INF           -6.0000          .              .          
j5.8        -INF           -3.0000          .              .          
j5.9        -INF             .              .            50.0000      

---- VAR y  how many parts j in J to order

          LOWER          LEVEL          UPPER         MARGINAL

j1          .           300.0000        +INF             .          
j2          .           175.0000        +INF             .          
j3          .            60.0000        +INF             .          
j4          .            60.0000        +INF             .          
j5          .            35.0000        +INF             .          

---- VAR z  how many parts j in J are not used (salvaged)

          LOWER          LEVEL          UPPER         MARGINAL

j1          .              .            +INF           -9.0000      
j2          .              .            +INF          -22.0000      
j3          .              .            +INF           -8.0000      
j4          .              .            +INF          -70.0000      
j5          .              .            +INF          -40.0000      

---- VAR x_scen  how many products i in I to produce and sell in each scenario r in R

            LOWER          LEVEL          UPPER         MARGINAL

i1.1          .             5.0000        +INF             .          
i1.2          .             5.0000        +INF             .          
i1.3          .             5.0000        +INF             .          
i1.4          .            10.0000        +INF             .          
i1.5          .            10.0000        +INF             .          
i1.6          .            10.0000        +INF             .          
i1.7          .            12.0000        +INF             .          
i1.8          .            12.0000        +INF             .          
i1.9          .            10.0000        +INF             .          
i2.1          .            17.0000        +INF             .          
i2.2          .            20.0000        +INF             .          
i2.3          .            25.0000        +INF             .          
i2.4          .            17.0000        +INF             .          
i2.5          .            20.0000        +INF             .          
i2.6          .            25.0000        +INF             .          
i2.7          .            17.0000        +INF             .          
i2.8          .            20.0000        +INF             .          
i2.9          .            25.0000        +INF             .          

                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR profit_sc~        -INF        46024.0000        +INF             .          


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 13
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    117 VARIABLE profit_scen.L         =    46024.000  
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 14
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE multi_product_pois Using MIP From line 168


---- obj_pois  =E=  

obj_pois..  10*y(j1) + 30*y(j2) + 10*y(j3) + 100*y(j4) + 50*y(j5) - z(j1) - 8*z(j2) - 2*z(j3) - 30*z(j4) - 10*z(j5) - 7*x_scen(i1,1) - 14*x_scen(i1,2) - 49*x_scen(i1,3) - 14*x_scen(i1,4) - 28*x_scen(i1,5) - 98*x_scen(i1,6) - 49*x_scen(i1,7) - 98*x_scen(i1,8) - 343*x_scen(i1,9) - 24*x_scen(i2,1) - 48*x_scen(i2,2) - 168*x_scen(i2,3) - 48*x_scen(i2,4) - 96*x_scen(i2,5) - 336*x_scen(i2,6) - 168*x_scen(i2,7) - 336*x_scen(i2,8) - 1176*x_scen(i2,9) + profit_pois =E= 0 ; (LHS = -46024, INFES = 46024 ****)
     

---- res_cons_scen  =L=  

res_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
res_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
res_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED


---- demand_cons_pois  =L=  

demand_cons_pois(i1,s1)..  x_pois(i1,s1) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s2)..  x_pois(i1,s2) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s3)..  x_pois(i1,s3) =L= 15 ; (LHS = 0)
     
REMAINING 197 ENTRIES SKIPPED


---- salvage_cons_scen  =L=  

salvage_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
salvage_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
salvage_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 15
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE multi_product_pois Using MIP From line 168


---- y  how many parts j in J to order

y(j1)
                (.LO, .L, .UP, .M = 0, 300, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j1,1)
       -1       res_cons_scen(j1,2)
       -1       res_cons_scen(j1,3)
       -1       res_cons_scen(j1,4)
       -1       res_cons_scen(j1,5)
       -1       res_cons_scen(j1,6)
       -1       res_cons_scen(j1,7)
       -1       res_cons_scen(j1,8)
       -1       res_cons_scen(j1,9)
       -1       salvage_cons_scen(j1,1)
       -1       salvage_cons_scen(j1,2)
       -1       salvage_cons_scen(j1,3)
       -1       salvage_cons_scen(j1,4)
       -1       salvage_cons_scen(j1,5)
       -1       salvage_cons_scen(j1,6)
       -1       salvage_cons_scen(j1,7)
       -1       salvage_cons_scen(j1,8)
       -1       salvage_cons_scen(j1,9)

y(j2)
                (.LO, .L, .UP, .M = 0, 175, +INF, 0)
       30       obj_pois
       -1       res_cons_scen(j2,1)
       -1       res_cons_scen(j2,2)
       -1       res_cons_scen(j2,3)
       -1       res_cons_scen(j2,4)
       -1       res_cons_scen(j2,5)
       -1       res_cons_scen(j2,6)
       -1       res_cons_scen(j2,7)
       -1       res_cons_scen(j2,8)
       -1       res_cons_scen(j2,9)
       -1       salvage_cons_scen(j2,1)
       -1       salvage_cons_scen(j2,2)
       -1       salvage_cons_scen(j2,3)
       -1       salvage_cons_scen(j2,4)
       -1       salvage_cons_scen(j2,5)
       -1       salvage_cons_scen(j2,6)
       -1       salvage_cons_scen(j2,7)
       -1       salvage_cons_scen(j2,8)
       -1       salvage_cons_scen(j2,9)

y(j3)
                (.LO, .L, .UP, .M = 0, 60, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j3,1)
       -1       res_cons_scen(j3,2)
       -1       res_cons_scen(j3,3)
       -1       res_cons_scen(j3,4)
       -1       res_cons_scen(j3,5)
       -1       res_cons_scen(j3,6)
       -1       res_cons_scen(j3,7)
       -1       res_cons_scen(j3,8)
       -1       res_cons_scen(j3,9)
       -1       salvage_cons_scen(j3,1)
       -1       salvage_cons_scen(j3,2)
       -1       salvage_cons_scen(j3,3)
       -1       salvage_cons_scen(j3,4)
       -1       salvage_cons_scen(j3,5)
       -1       salvage_cons_scen(j3,6)
       -1       salvage_cons_scen(j3,7)
       -1       salvage_cons_scen(j3,8)
       -1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- z  how many parts j in J are not used (salvaged)

z(j1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -9)
       -1       obj_pois
        1       res_cons_scen(j1,1)
        1       res_cons_scen(j1,2)
        1       res_cons_scen(j1,3)
        1       res_cons_scen(j1,4)
        1       res_cons_scen(j1,5)
        1       res_cons_scen(j1,6)
        1       res_cons_scen(j1,7)
        1       res_cons_scen(j1,8)
        1       res_cons_scen(j1,9)
        1       salvage_cons_scen(j1,1)
        1       salvage_cons_scen(j1,2)
        1       salvage_cons_scen(j1,3)
        1       salvage_cons_scen(j1,4)
        1       salvage_cons_scen(j1,5)
        1       salvage_cons_scen(j1,6)
        1       salvage_cons_scen(j1,7)
        1       salvage_cons_scen(j1,8)
        1       salvage_cons_scen(j1,9)

z(j2)
                (.LO, .L, .UP, .M = 0, 0, +INF, -22)
       -8       obj_pois
        1       res_cons_scen(j2,1)
        1       res_cons_scen(j2,2)
        1       res_cons_scen(j2,3)
        1       res_cons_scen(j2,4)
        1       res_cons_scen(j2,5)
        1       res_cons_scen(j2,6)
        1       res_cons_scen(j2,7)
        1       res_cons_scen(j2,8)
        1       res_cons_scen(j2,9)
        1       salvage_cons_scen(j2,1)
        1       salvage_cons_scen(j2,2)
        1       salvage_cons_scen(j2,3)
        1       salvage_cons_scen(j2,4)
        1       salvage_cons_scen(j2,5)
        1       salvage_cons_scen(j2,6)
        1       salvage_cons_scen(j2,7)
        1       salvage_cons_scen(j2,8)
        1       salvage_cons_scen(j2,9)

z(j3)
                (.LO, .L, .UP, .M = 0, 0, +INF, -8)
       -2       obj_pois
        1       res_cons_scen(j3,1)
        1       res_cons_scen(j3,2)
        1       res_cons_scen(j3,3)
        1       res_cons_scen(j3,4)
        1       res_cons_scen(j3,5)
        1       res_cons_scen(j3,6)
        1       res_cons_scen(j3,7)
        1       res_cons_scen(j3,8)
        1       res_cons_scen(j3,9)
        1       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j3,4)
        1       salvage_cons_scen(j3,5)
        1       salvage_cons_scen(j3,6)
        1       salvage_cons_scen(j3,7)
        1       salvage_cons_scen(j3,8)
        1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- x_scen  how many products i in I to produce and sell in each scenario r in R

x_scen(i1,1)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
       -7       obj_pois
       10       res_cons_scen(j1,1)
        5       res_cons_scen(j2,1)
        5       res_cons_scen(j3,1)
        1       res_cons_scen(j4,1)
        1       res_cons_scen(j5,1)
       10       salvage_cons_scen(j1,1)
        5       salvage_cons_scen(j2,1)
        5       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j4,1)
        1       salvage_cons_scen(j5,1)

x_scen(i1,2)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -14       obj_pois
       10       res_cons_scen(j1,2)
        5       res_cons_scen(j2,2)
        5       res_cons_scen(j3,2)
        1       res_cons_scen(j4,2)
        1       res_cons_scen(j5,2)
       10       salvage_cons_scen(j1,2)
        5       salvage_cons_scen(j2,2)
        5       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j4,2)
        1       salvage_cons_scen(j5,2)

x_scen(i1,3)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -49       obj_pois
       10       res_cons_scen(j1,3)
        5       res_cons_scen(j2,3)
        5       res_cons_scen(j3,3)
        1       res_cons_scen(j4,3)
        1       res_cons_scen(j5,3)
       10       salvage_cons_scen(j1,3)
        5       salvage_cons_scen(j2,3)
        5       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j4,3)
        1       salvage_cons_scen(j5,3)

REMAINING 15 ENTRIES SKIPPED

---- x_pois  

x_pois(i1,s1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s1)

x_pois(i1,s2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s2)

x_pois(i1,s3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s3)

REMAINING 197 ENTRIES SKIPPED

---- profit_pois  

profit_pois
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj_pois

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 16
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Range Statistics    SOLVE multi_product_pois Using MIP From line 168


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.000E+00, 3.300E+01] - Zero values observed as well
Bound     [min, max] : [        NA,        NA] - Zero values observed as well
Matrix    [min, max] : [ 1.000E+00, 1.176E+03]

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 17
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE multi_product_pois Using MIP From line 168


LOOPS                           numScenarios   100


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS          291
BLOCKS OF VARIABLES           5     SINGLE VARIABLES          229
NON ZERO ELEMENTS           571


GENERATION TIME      =        0.015 SECONDS      4 MB  45.1.0 88bbff72 WEX-WEI
               L O O P S         numScenarios 100

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 18
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE multi_product_pois Using MIP From line 168


               S O L V E      S U M M A R Y

     MODEL   multi_product_pois   OBJECTIVE  profit_pois
     TYPE    MIP                  DIRECTION  MAXIMIZE
     SOLVER  CPLEX                FROM LINE  168

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      19 Infeasible - No Solution
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.000 10000000000.000
 ITERATION COUNT, LIMIT         0    2147483647
--- GAMS/CPLEX licensed for continuous and discrete problems.
--- GMO setup time: 0.00s
--- Space for names approximately 0.01 Mb
--- Use option 'names no' to turn use of names off
--- GMO memory 0.56 Mb (peak 0.56 Mb)
--- Dictionary memory 0.00 Mb
--- Cplex 22.1.1.0 link memory 0.01 Mb (peak 0.03 Mb)
--- Starting Cplex


--- LP status (4): unbounded or infeasible.
--- Cplex Time: 0.00sec (det. 0.08 ticks)

*** WARNING: Presolve found the problem infeasible or unbounded
--- Cplex diagnoses the model to be either infeasible or unbounded.
--- There is no such GAMS Model Status so returning with a status of infeasible.
--- Model has been proven to be either infeasible or unbounded

No solution returned
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 19
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE multi_product_pois Using MIP From line 168


---- obj_pois  =E=  

obj_pois..  10*y(j1) + 30*y(j2) + 10*y(j3) + 100*y(j4) + 50*y(j5) - z(j1) - 8*z(j2) - 2*z(j3) - 30*z(j4) - 10*z(j5) - 7*x_scen(i1,1) - 14*x_scen(i1,2) - 49*x_scen(i1,3) - 14*x_scen(i1,4) - 28*x_scen(i1,5) - 98*x_scen(i1,6) - 49*x_scen(i1,7) - 98*x_scen(i1,8) - 343*x_scen(i1,9) - 24*x_scen(i2,1) - 48*x_scen(i2,2) - 168*x_scen(i2,3) - 48*x_scen(i2,4) - 96*x_scen(i2,5) - 336*x_scen(i2,6) - 168*x_scen(i2,7) - 336*x_scen(i2,8) - 1176*x_scen(i2,9) + profit_pois =E= 0 ; (LHS = -46024, INFES = 46024 ****)
     

---- res_cons_scen  =L=  

res_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
res_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
res_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED


---- demand_cons_pois  =L=  

demand_cons_pois(i1,s1)..  x_pois(i1,s1) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s2)..  x_pois(i1,s2) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s3)..  x_pois(i1,s3) =L= 15 ; (LHS = 0)
     
REMAINING 197 ENTRIES SKIPPED


---- salvage_cons_scen  =L=  

salvage_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
salvage_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
salvage_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 20
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE multi_product_pois Using MIP From line 168


---- y  how many parts j in J to order

y(j1)
                (.LO, .L, .UP, .M = 0, 300, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j1,1)
       -1       res_cons_scen(j1,2)
       -1       res_cons_scen(j1,3)
       -1       res_cons_scen(j1,4)
       -1       res_cons_scen(j1,5)
       -1       res_cons_scen(j1,6)
       -1       res_cons_scen(j1,7)
       -1       res_cons_scen(j1,8)
       -1       res_cons_scen(j1,9)
       -1       salvage_cons_scen(j1,1)
       -1       salvage_cons_scen(j1,2)
       -1       salvage_cons_scen(j1,3)
       -1       salvage_cons_scen(j1,4)
       -1       salvage_cons_scen(j1,5)
       -1       salvage_cons_scen(j1,6)
       -1       salvage_cons_scen(j1,7)
       -1       salvage_cons_scen(j1,8)
       -1       salvage_cons_scen(j1,9)

y(j2)
                (.LO, .L, .UP, .M = 0, 175, +INF, 0)
       30       obj_pois
       -1       res_cons_scen(j2,1)
       -1       res_cons_scen(j2,2)
       -1       res_cons_scen(j2,3)
       -1       res_cons_scen(j2,4)
       -1       res_cons_scen(j2,5)
       -1       res_cons_scen(j2,6)
       -1       res_cons_scen(j2,7)
       -1       res_cons_scen(j2,8)
       -1       res_cons_scen(j2,9)
       -1       salvage_cons_scen(j2,1)
       -1       salvage_cons_scen(j2,2)
       -1       salvage_cons_scen(j2,3)
       -1       salvage_cons_scen(j2,4)
       -1       salvage_cons_scen(j2,5)
       -1       salvage_cons_scen(j2,6)
       -1       salvage_cons_scen(j2,7)
       -1       salvage_cons_scen(j2,8)
       -1       salvage_cons_scen(j2,9)

y(j3)
                (.LO, .L, .UP, .M = 0, 60, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j3,1)
       -1       res_cons_scen(j3,2)
       -1       res_cons_scen(j3,3)
       -1       res_cons_scen(j3,4)
       -1       res_cons_scen(j3,5)
       -1       res_cons_scen(j3,6)
       -1       res_cons_scen(j3,7)
       -1       res_cons_scen(j3,8)
       -1       res_cons_scen(j3,9)
       -1       salvage_cons_scen(j3,1)
       -1       salvage_cons_scen(j3,2)
       -1       salvage_cons_scen(j3,3)
       -1       salvage_cons_scen(j3,4)
       -1       salvage_cons_scen(j3,5)
       -1       salvage_cons_scen(j3,6)
       -1       salvage_cons_scen(j3,7)
       -1       salvage_cons_scen(j3,8)
       -1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- z  how many parts j in J are not used (salvaged)

z(j1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -9)
       -1       obj_pois
        1       res_cons_scen(j1,1)
        1       res_cons_scen(j1,2)
        1       res_cons_scen(j1,3)
        1       res_cons_scen(j1,4)
        1       res_cons_scen(j1,5)
        1       res_cons_scen(j1,6)
        1       res_cons_scen(j1,7)
        1       res_cons_scen(j1,8)
        1       res_cons_scen(j1,9)
        1       salvage_cons_scen(j1,1)
        1       salvage_cons_scen(j1,2)
        1       salvage_cons_scen(j1,3)
        1       salvage_cons_scen(j1,4)
        1       salvage_cons_scen(j1,5)
        1       salvage_cons_scen(j1,6)
        1       salvage_cons_scen(j1,7)
        1       salvage_cons_scen(j1,8)
        1       salvage_cons_scen(j1,9)

z(j2)
                (.LO, .L, .UP, .M = 0, 0, +INF, -22)
       -8       obj_pois
        1       res_cons_scen(j2,1)
        1       res_cons_scen(j2,2)
        1       res_cons_scen(j2,3)
        1       res_cons_scen(j2,4)
        1       res_cons_scen(j2,5)
        1       res_cons_scen(j2,6)
        1       res_cons_scen(j2,7)
        1       res_cons_scen(j2,8)
        1       res_cons_scen(j2,9)
        1       salvage_cons_scen(j2,1)
        1       salvage_cons_scen(j2,2)
        1       salvage_cons_scen(j2,3)
        1       salvage_cons_scen(j2,4)
        1       salvage_cons_scen(j2,5)
        1       salvage_cons_scen(j2,6)
        1       salvage_cons_scen(j2,7)
        1       salvage_cons_scen(j2,8)
        1       salvage_cons_scen(j2,9)

z(j3)
                (.LO, .L, .UP, .M = 0, 0, +INF, -8)
       -2       obj_pois
        1       res_cons_scen(j3,1)
        1       res_cons_scen(j3,2)
        1       res_cons_scen(j3,3)
        1       res_cons_scen(j3,4)
        1       res_cons_scen(j3,5)
        1       res_cons_scen(j3,6)
        1       res_cons_scen(j3,7)
        1       res_cons_scen(j3,8)
        1       res_cons_scen(j3,9)
        1       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j3,4)
        1       salvage_cons_scen(j3,5)
        1       salvage_cons_scen(j3,6)
        1       salvage_cons_scen(j3,7)
        1       salvage_cons_scen(j3,8)
        1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- x_scen  how many products i in I to produce and sell in each scenario r in R

x_scen(i1,1)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
       -7       obj_pois
       10       res_cons_scen(j1,1)
        5       res_cons_scen(j2,1)
        5       res_cons_scen(j3,1)
        1       res_cons_scen(j4,1)
        1       res_cons_scen(j5,1)
       10       salvage_cons_scen(j1,1)
        5       salvage_cons_scen(j2,1)
        5       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j4,1)
        1       salvage_cons_scen(j5,1)

x_scen(i1,2)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -14       obj_pois
       10       res_cons_scen(j1,2)
        5       res_cons_scen(j2,2)
        5       res_cons_scen(j3,2)
        1       res_cons_scen(j4,2)
        1       res_cons_scen(j5,2)
       10       salvage_cons_scen(j1,2)
        5       salvage_cons_scen(j2,2)
        5       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j4,2)
        1       salvage_cons_scen(j5,2)

x_scen(i1,3)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -49       obj_pois
       10       res_cons_scen(j1,3)
        5       res_cons_scen(j2,3)
        5       res_cons_scen(j3,3)
        1       res_cons_scen(j4,3)
        1       res_cons_scen(j5,3)
       10       salvage_cons_scen(j1,3)
        5       salvage_cons_scen(j2,3)
        5       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j4,3)
        1       salvage_cons_scen(j5,3)

REMAINING 15 ENTRIES SKIPPED

---- x_pois  

x_pois(i1,s1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s1)

x_pois(i1,s2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s2)

x_pois(i1,s3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s3)

REMAINING 197 ENTRIES SKIPPED

---- profit_pois  

profit_pois
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj_pois

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 21
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Range Statistics    SOLVE multi_product_pois Using MIP From line 168


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.000E+00, 3.300E+01] - Zero values observed as well
Bound     [min, max] : [        NA,        NA] - Zero values observed as well
Matrix    [min, max] : [ 1.000E+00, 1.176E+03]

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 22
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE multi_product_pois Using MIP From line 168


LOOPS                           numScenarios   200


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS          291
BLOCKS OF VARIABLES           5     SINGLE VARIABLES          229
NON ZERO ELEMENTS           571


GENERATION TIME      =        0.000 SECONDS      4 MB  45.1.0 88bbff72 WEX-WEI
               L O O P S         numScenarios 200

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 23
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE multi_product_pois Using MIP From line 168


               S O L V E      S U M M A R Y

     MODEL   multi_product_pois   OBJECTIVE  profit_pois
     TYPE    MIP                  DIRECTION  MAXIMIZE
     SOLVER  CPLEX                FROM LINE  168

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      19 Infeasible - No Solution
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.000 10000000000.000
 ITERATION COUNT, LIMIT         0    2147483647
--- GAMS/CPLEX licensed for continuous and discrete problems.
--- GMO setup time: 0.00s
--- Space for names approximately 0.01 Mb
--- Use option 'names no' to turn use of names off
--- GMO memory 0.56 Mb (peak 0.56 Mb)
--- Dictionary memory 0.00 Mb
--- Cplex 22.1.1.0 link memory 0.01 Mb (peak 0.03 Mb)
--- Starting Cplex


--- LP status (4): unbounded or infeasible.
--- Cplex Time: 0.00sec (det. 0.08 ticks)

*** WARNING: Presolve found the problem infeasible or unbounded
--- Cplex diagnoses the model to be either infeasible or unbounded.
--- There is no such GAMS Model Status so returning with a status of infeasible.
--- Model has been proven to be either infeasible or unbounded

No solution returned
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 24
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE multi_product_pois Using MIP From line 168


---- obj_pois  =E=  

obj_pois..  10*y(j1) + 30*y(j2) + 10*y(j3) + 100*y(j4) + 50*y(j5) - z(j1) - 8*z(j2) - 2*z(j3) - 30*z(j4) - 10*z(j5) - 7*x_scen(i1,1) - 14*x_scen(i1,2) - 49*x_scen(i1,3) - 14*x_scen(i1,4) - 28*x_scen(i1,5) - 98*x_scen(i1,6) - 49*x_scen(i1,7) - 98*x_scen(i1,8) - 343*x_scen(i1,9) - 24*x_scen(i2,1) - 48*x_scen(i2,2) - 168*x_scen(i2,3) - 48*x_scen(i2,4) - 96*x_scen(i2,5) - 336*x_scen(i2,6) - 168*x_scen(i2,7) - 336*x_scen(i2,8) - 1176*x_scen(i2,9) + profit_pois =E= 0 ; (LHS = -46024, INFES = 46024 ****)
     

---- res_cons_scen  =L=  

res_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
res_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
res_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED


---- demand_cons_pois  =L=  

demand_cons_pois(i1,s1)..  x_pois(i1,s1) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s2)..  x_pois(i1,s2) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s3)..  x_pois(i1,s3) =L= 15 ; (LHS = 0)
     
REMAINING 197 ENTRIES SKIPPED


---- salvage_cons_scen  =L=  

salvage_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
salvage_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
salvage_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 25
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE multi_product_pois Using MIP From line 168


---- y  how many parts j in J to order

y(j1)
                (.LO, .L, .UP, .M = 0, 300, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j1,1)
       -1       res_cons_scen(j1,2)
       -1       res_cons_scen(j1,3)
       -1       res_cons_scen(j1,4)
       -1       res_cons_scen(j1,5)
       -1       res_cons_scen(j1,6)
       -1       res_cons_scen(j1,7)
       -1       res_cons_scen(j1,8)
       -1       res_cons_scen(j1,9)
       -1       salvage_cons_scen(j1,1)
       -1       salvage_cons_scen(j1,2)
       -1       salvage_cons_scen(j1,3)
       -1       salvage_cons_scen(j1,4)
       -1       salvage_cons_scen(j1,5)
       -1       salvage_cons_scen(j1,6)
       -1       salvage_cons_scen(j1,7)
       -1       salvage_cons_scen(j1,8)
       -1       salvage_cons_scen(j1,9)

y(j2)
                (.LO, .L, .UP, .M = 0, 175, +INF, 0)
       30       obj_pois
       -1       res_cons_scen(j2,1)
       -1       res_cons_scen(j2,2)
       -1       res_cons_scen(j2,3)
       -1       res_cons_scen(j2,4)
       -1       res_cons_scen(j2,5)
       -1       res_cons_scen(j2,6)
       -1       res_cons_scen(j2,7)
       -1       res_cons_scen(j2,8)
       -1       res_cons_scen(j2,9)
       -1       salvage_cons_scen(j2,1)
       -1       salvage_cons_scen(j2,2)
       -1       salvage_cons_scen(j2,3)
       -1       salvage_cons_scen(j2,4)
       -1       salvage_cons_scen(j2,5)
       -1       salvage_cons_scen(j2,6)
       -1       salvage_cons_scen(j2,7)
       -1       salvage_cons_scen(j2,8)
       -1       salvage_cons_scen(j2,9)

y(j3)
                (.LO, .L, .UP, .M = 0, 60, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j3,1)
       -1       res_cons_scen(j3,2)
       -1       res_cons_scen(j3,3)
       -1       res_cons_scen(j3,4)
       -1       res_cons_scen(j3,5)
       -1       res_cons_scen(j3,6)
       -1       res_cons_scen(j3,7)
       -1       res_cons_scen(j3,8)
       -1       res_cons_scen(j3,9)
       -1       salvage_cons_scen(j3,1)
       -1       salvage_cons_scen(j3,2)
       -1       salvage_cons_scen(j3,3)
       -1       salvage_cons_scen(j3,4)
       -1       salvage_cons_scen(j3,5)
       -1       salvage_cons_scen(j3,6)
       -1       salvage_cons_scen(j3,7)
       -1       salvage_cons_scen(j3,8)
       -1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- z  how many parts j in J are not used (salvaged)

z(j1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -9)
       -1       obj_pois
        1       res_cons_scen(j1,1)
        1       res_cons_scen(j1,2)
        1       res_cons_scen(j1,3)
        1       res_cons_scen(j1,4)
        1       res_cons_scen(j1,5)
        1       res_cons_scen(j1,6)
        1       res_cons_scen(j1,7)
        1       res_cons_scen(j1,8)
        1       res_cons_scen(j1,9)
        1       salvage_cons_scen(j1,1)
        1       salvage_cons_scen(j1,2)
        1       salvage_cons_scen(j1,3)
        1       salvage_cons_scen(j1,4)
        1       salvage_cons_scen(j1,5)
        1       salvage_cons_scen(j1,6)
        1       salvage_cons_scen(j1,7)
        1       salvage_cons_scen(j1,8)
        1       salvage_cons_scen(j1,9)

z(j2)
                (.LO, .L, .UP, .M = 0, 0, +INF, -22)
       -8       obj_pois
        1       res_cons_scen(j2,1)
        1       res_cons_scen(j2,2)
        1       res_cons_scen(j2,3)
        1       res_cons_scen(j2,4)
        1       res_cons_scen(j2,5)
        1       res_cons_scen(j2,6)
        1       res_cons_scen(j2,7)
        1       res_cons_scen(j2,8)
        1       res_cons_scen(j2,9)
        1       salvage_cons_scen(j2,1)
        1       salvage_cons_scen(j2,2)
        1       salvage_cons_scen(j2,3)
        1       salvage_cons_scen(j2,4)
        1       salvage_cons_scen(j2,5)
        1       salvage_cons_scen(j2,6)
        1       salvage_cons_scen(j2,7)
        1       salvage_cons_scen(j2,8)
        1       salvage_cons_scen(j2,9)

z(j3)
                (.LO, .L, .UP, .M = 0, 0, +INF, -8)
       -2       obj_pois
        1       res_cons_scen(j3,1)
        1       res_cons_scen(j3,2)
        1       res_cons_scen(j3,3)
        1       res_cons_scen(j3,4)
        1       res_cons_scen(j3,5)
        1       res_cons_scen(j3,6)
        1       res_cons_scen(j3,7)
        1       res_cons_scen(j3,8)
        1       res_cons_scen(j3,9)
        1       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j3,4)
        1       salvage_cons_scen(j3,5)
        1       salvage_cons_scen(j3,6)
        1       salvage_cons_scen(j3,7)
        1       salvage_cons_scen(j3,8)
        1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- x_scen  how many products i in I to produce and sell in each scenario r in R

x_scen(i1,1)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
       -7       obj_pois
       10       res_cons_scen(j1,1)
        5       res_cons_scen(j2,1)
        5       res_cons_scen(j3,1)
        1       res_cons_scen(j4,1)
        1       res_cons_scen(j5,1)
       10       salvage_cons_scen(j1,1)
        5       salvage_cons_scen(j2,1)
        5       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j4,1)
        1       salvage_cons_scen(j5,1)

x_scen(i1,2)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -14       obj_pois
       10       res_cons_scen(j1,2)
        5       res_cons_scen(j2,2)
        5       res_cons_scen(j3,2)
        1       res_cons_scen(j4,2)
        1       res_cons_scen(j5,2)
       10       salvage_cons_scen(j1,2)
        5       salvage_cons_scen(j2,2)
        5       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j4,2)
        1       salvage_cons_scen(j5,2)

x_scen(i1,3)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -49       obj_pois
       10       res_cons_scen(j1,3)
        5       res_cons_scen(j2,3)
        5       res_cons_scen(j3,3)
        1       res_cons_scen(j4,3)
        1       res_cons_scen(j5,3)
       10       salvage_cons_scen(j1,3)
        5       salvage_cons_scen(j2,3)
        5       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j4,3)
        1       salvage_cons_scen(j5,3)

REMAINING 15 ENTRIES SKIPPED

---- x_pois  

x_pois(i1,s1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s1)

x_pois(i1,s2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s2)

x_pois(i1,s3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s3)

REMAINING 197 ENTRIES SKIPPED

---- profit_pois  

profit_pois
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj_pois

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 26
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Range Statistics    SOLVE multi_product_pois Using MIP From line 168


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.000E+00, 3.300E+01] - Zero values observed as well
Bound     [min, max] : [        NA,        NA] - Zero values observed as well
Matrix    [min, max] : [ 1.000E+00, 1.176E+03]

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 27
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE multi_product_pois Using MIP From line 168


LOOPS                           numScenarios   400


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS          291
BLOCKS OF VARIABLES           5     SINGLE VARIABLES          229
NON ZERO ELEMENTS           571


GENERATION TIME      =        0.016 SECONDS      4 MB  45.1.0 88bbff72 WEX-WEI
               L O O P S         numScenarios 400

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 28
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE multi_product_pois Using MIP From line 168


               S O L V E      S U M M A R Y

     MODEL   multi_product_pois   OBJECTIVE  profit_pois
     TYPE    MIP                  DIRECTION  MAXIMIZE
     SOLVER  CPLEX                FROM LINE  168

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      19 Infeasible - No Solution
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.000 10000000000.000
 ITERATION COUNT, LIMIT         0    2147483647
--- GAMS/CPLEX licensed for continuous and discrete problems.
--- GMO setup time: 0.00s
--- Space for names approximately 0.01 Mb
--- Use option 'names no' to turn use of names off
--- GMO memory 0.56 Mb (peak 0.56 Mb)
--- Dictionary memory 0.00 Mb
--- Cplex 22.1.1.0 link memory 0.01 Mb (peak 0.03 Mb)
--- Starting Cplex


--- LP status (4): unbounded or infeasible.
--- Cplex Time: 0.00sec (det. 0.08 ticks)

*** WARNING: Presolve found the problem infeasible or unbounded
--- Cplex diagnoses the model to be either infeasible or unbounded.
--- There is no such GAMS Model Status so returning with a status of infeasible.
--- Model has been proven to be either infeasible or unbounded

No solution returned
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 29
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE multi_product_pois Using MIP From line 168


---- obj_pois  =E=  

obj_pois..  10*y(j1) + 30*y(j2) + 10*y(j3) + 100*y(j4) + 50*y(j5) - z(j1) - 8*z(j2) - 2*z(j3) - 30*z(j4) - 10*z(j5) - 7*x_scen(i1,1) - 14*x_scen(i1,2) - 49*x_scen(i1,3) - 14*x_scen(i1,4) - 28*x_scen(i1,5) - 98*x_scen(i1,6) - 49*x_scen(i1,7) - 98*x_scen(i1,8) - 343*x_scen(i1,9) - 24*x_scen(i2,1) - 48*x_scen(i2,2) - 168*x_scen(i2,3) - 48*x_scen(i2,4) - 96*x_scen(i2,5) - 336*x_scen(i2,6) - 168*x_scen(i2,7) - 336*x_scen(i2,8) - 1176*x_scen(i2,9) + profit_pois =E= 0 ; (LHS = -46024, INFES = 46024 ****)
     

---- res_cons_scen  =L=  

res_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
res_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
res_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED


---- demand_cons_pois  =L=  

demand_cons_pois(i1,s1)..  x_pois(i1,s1) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s2)..  x_pois(i1,s2) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s3)..  x_pois(i1,s3) =L= 15 ; (LHS = 0)
     
REMAINING 197 ENTRIES SKIPPED


---- salvage_cons_scen  =L=  

salvage_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
salvage_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
salvage_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 30
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE multi_product_pois Using MIP From line 168


---- y  how many parts j in J to order

y(j1)
                (.LO, .L, .UP, .M = 0, 300, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j1,1)
       -1       res_cons_scen(j1,2)
       -1       res_cons_scen(j1,3)
       -1       res_cons_scen(j1,4)
       -1       res_cons_scen(j1,5)
       -1       res_cons_scen(j1,6)
       -1       res_cons_scen(j1,7)
       -1       res_cons_scen(j1,8)
       -1       res_cons_scen(j1,9)
       -1       salvage_cons_scen(j1,1)
       -1       salvage_cons_scen(j1,2)
       -1       salvage_cons_scen(j1,3)
       -1       salvage_cons_scen(j1,4)
       -1       salvage_cons_scen(j1,5)
       -1       salvage_cons_scen(j1,6)
       -1       salvage_cons_scen(j1,7)
       -1       salvage_cons_scen(j1,8)
       -1       salvage_cons_scen(j1,9)

y(j2)
                (.LO, .L, .UP, .M = 0, 175, +INF, 0)
       30       obj_pois
       -1       res_cons_scen(j2,1)
       -1       res_cons_scen(j2,2)
       -1       res_cons_scen(j2,3)
       -1       res_cons_scen(j2,4)
       -1       res_cons_scen(j2,5)
       -1       res_cons_scen(j2,6)
       -1       res_cons_scen(j2,7)
       -1       res_cons_scen(j2,8)
       -1       res_cons_scen(j2,9)
       -1       salvage_cons_scen(j2,1)
       -1       salvage_cons_scen(j2,2)
       -1       salvage_cons_scen(j2,3)
       -1       salvage_cons_scen(j2,4)
       -1       salvage_cons_scen(j2,5)
       -1       salvage_cons_scen(j2,6)
       -1       salvage_cons_scen(j2,7)
       -1       salvage_cons_scen(j2,8)
       -1       salvage_cons_scen(j2,9)

y(j3)
                (.LO, .L, .UP, .M = 0, 60, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j3,1)
       -1       res_cons_scen(j3,2)
       -1       res_cons_scen(j3,3)
       -1       res_cons_scen(j3,4)
       -1       res_cons_scen(j3,5)
       -1       res_cons_scen(j3,6)
       -1       res_cons_scen(j3,7)
       -1       res_cons_scen(j3,8)
       -1       res_cons_scen(j3,9)
       -1       salvage_cons_scen(j3,1)
       -1       salvage_cons_scen(j3,2)
       -1       salvage_cons_scen(j3,3)
       -1       salvage_cons_scen(j3,4)
       -1       salvage_cons_scen(j3,5)
       -1       salvage_cons_scen(j3,6)
       -1       salvage_cons_scen(j3,7)
       -1       salvage_cons_scen(j3,8)
       -1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- z  how many parts j in J are not used (salvaged)

z(j1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -9)
       -1       obj_pois
        1       res_cons_scen(j1,1)
        1       res_cons_scen(j1,2)
        1       res_cons_scen(j1,3)
        1       res_cons_scen(j1,4)
        1       res_cons_scen(j1,5)
        1       res_cons_scen(j1,6)
        1       res_cons_scen(j1,7)
        1       res_cons_scen(j1,8)
        1       res_cons_scen(j1,9)
        1       salvage_cons_scen(j1,1)
        1       salvage_cons_scen(j1,2)
        1       salvage_cons_scen(j1,3)
        1       salvage_cons_scen(j1,4)
        1       salvage_cons_scen(j1,5)
        1       salvage_cons_scen(j1,6)
        1       salvage_cons_scen(j1,7)
        1       salvage_cons_scen(j1,8)
        1       salvage_cons_scen(j1,9)

z(j2)
                (.LO, .L, .UP, .M = 0, 0, +INF, -22)
       -8       obj_pois
        1       res_cons_scen(j2,1)
        1       res_cons_scen(j2,2)
        1       res_cons_scen(j2,3)
        1       res_cons_scen(j2,4)
        1       res_cons_scen(j2,5)
        1       res_cons_scen(j2,6)
        1       res_cons_scen(j2,7)
        1       res_cons_scen(j2,8)
        1       res_cons_scen(j2,9)
        1       salvage_cons_scen(j2,1)
        1       salvage_cons_scen(j2,2)
        1       salvage_cons_scen(j2,3)
        1       salvage_cons_scen(j2,4)
        1       salvage_cons_scen(j2,5)
        1       salvage_cons_scen(j2,6)
        1       salvage_cons_scen(j2,7)
        1       salvage_cons_scen(j2,8)
        1       salvage_cons_scen(j2,9)

z(j3)
                (.LO, .L, .UP, .M = 0, 0, +INF, -8)
       -2       obj_pois
        1       res_cons_scen(j3,1)
        1       res_cons_scen(j3,2)
        1       res_cons_scen(j3,3)
        1       res_cons_scen(j3,4)
        1       res_cons_scen(j3,5)
        1       res_cons_scen(j3,6)
        1       res_cons_scen(j3,7)
        1       res_cons_scen(j3,8)
        1       res_cons_scen(j3,9)
        1       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j3,4)
        1       salvage_cons_scen(j3,5)
        1       salvage_cons_scen(j3,6)
        1       salvage_cons_scen(j3,7)
        1       salvage_cons_scen(j3,8)
        1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- x_scen  how many products i in I to produce and sell in each scenario r in R

x_scen(i1,1)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
       -7       obj_pois
       10       res_cons_scen(j1,1)
        5       res_cons_scen(j2,1)
        5       res_cons_scen(j3,1)
        1       res_cons_scen(j4,1)
        1       res_cons_scen(j5,1)
       10       salvage_cons_scen(j1,1)
        5       salvage_cons_scen(j2,1)
        5       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j4,1)
        1       salvage_cons_scen(j5,1)

x_scen(i1,2)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -14       obj_pois
       10       res_cons_scen(j1,2)
        5       res_cons_scen(j2,2)
        5       res_cons_scen(j3,2)
        1       res_cons_scen(j4,2)
        1       res_cons_scen(j5,2)
       10       salvage_cons_scen(j1,2)
        5       salvage_cons_scen(j2,2)
        5       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j4,2)
        1       salvage_cons_scen(j5,2)

x_scen(i1,3)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -49       obj_pois
       10       res_cons_scen(j1,3)
        5       res_cons_scen(j2,3)
        5       res_cons_scen(j3,3)
        1       res_cons_scen(j4,3)
        1       res_cons_scen(j5,3)
       10       salvage_cons_scen(j1,3)
        5       salvage_cons_scen(j2,3)
        5       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j4,3)
        1       salvage_cons_scen(j5,3)

REMAINING 15 ENTRIES SKIPPED

---- x_pois  

x_pois(i1,s1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s1)

x_pois(i1,s2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s2)

x_pois(i1,s3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s3)

REMAINING 197 ENTRIES SKIPPED

---- profit_pois  

profit_pois
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj_pois

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 31
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Range Statistics    SOLVE multi_product_pois Using MIP From line 168


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.000E+00, 3.300E+01] - Zero values observed as well
Bound     [min, max] : [        NA,        NA] - Zero values observed as well
Matrix    [min, max] : [ 1.000E+00, 1.176E+03]

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 32
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE multi_product_pois Using MIP From line 168


LOOPS                           numScenarios   800


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS          291
BLOCKS OF VARIABLES           5     SINGLE VARIABLES          229
NON ZERO ELEMENTS           571


GENERATION TIME      =        0.000 SECONDS      4 MB  45.1.0 88bbff72 WEX-WEI
               L O O P S         numScenarios 800

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 33
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE multi_product_pois Using MIP From line 168


               S O L V E      S U M M A R Y

     MODEL   multi_product_pois   OBJECTIVE  profit_pois
     TYPE    MIP                  DIRECTION  MAXIMIZE
     SOLVER  CPLEX                FROM LINE  168

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      19 Infeasible - No Solution
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.000 10000000000.000
 ITERATION COUNT, LIMIT         0    2147483647
--- GAMS/CPLEX licensed for continuous and discrete problems.
--- GMO setup time: 0.00s
--- Space for names approximately 0.01 Mb
--- Use option 'names no' to turn use of names off
--- GMO memory 0.56 Mb (peak 0.56 Mb)
--- Dictionary memory 0.00 Mb
--- Cplex 22.1.1.0 link memory 0.01 Mb (peak 0.03 Mb)
--- Starting Cplex


--- LP status (4): unbounded or infeasible.
--- Cplex Time: 0.00sec (det. 0.08 ticks)

*** WARNING: Presolve found the problem infeasible or unbounded
--- Cplex diagnoses the model to be either infeasible or unbounded.
--- There is no such GAMS Model Status so returning with a status of infeasible.
--- Model has been proven to be either infeasible or unbounded

No solution returned
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 34
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE multi_product_pois Using MIP From line 168


---- obj_pois  =E=  

obj_pois..  10*y(j1) + 30*y(j2) + 10*y(j3) + 100*y(j4) + 50*y(j5) - z(j1) - 8*z(j2) - 2*z(j3) - 30*z(j4) - 10*z(j5) - 7*x_scen(i1,1) - 14*x_scen(i1,2) - 49*x_scen(i1,3) - 14*x_scen(i1,4) - 28*x_scen(i1,5) - 98*x_scen(i1,6) - 49*x_scen(i1,7) - 98*x_scen(i1,8) - 343*x_scen(i1,9) - 24*x_scen(i2,1) - 48*x_scen(i2,2) - 168*x_scen(i2,3) - 48*x_scen(i2,4) - 96*x_scen(i2,5) - 336*x_scen(i2,6) - 168*x_scen(i2,7) - 336*x_scen(i2,8) - 1176*x_scen(i2,9) + profit_pois =E= 0 ; (LHS = -46024, INFES = 46024 ****)
     

---- res_cons_scen  =L=  

res_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
res_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
res_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED


---- demand_cons_pois  =L=  

demand_cons_pois(i1,s1)..  x_pois(i1,s1) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s2)..  x_pois(i1,s2) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s3)..  x_pois(i1,s3) =L= 15 ; (LHS = 0)
     
REMAINING 197 ENTRIES SKIPPED


---- salvage_cons_scen  =L=  

salvage_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
salvage_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
salvage_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 35
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE multi_product_pois Using MIP From line 168


---- y  how many parts j in J to order

y(j1)
                (.LO, .L, .UP, .M = 0, 300, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j1,1)
       -1       res_cons_scen(j1,2)
       -1       res_cons_scen(j1,3)
       -1       res_cons_scen(j1,4)
       -1       res_cons_scen(j1,5)
       -1       res_cons_scen(j1,6)
       -1       res_cons_scen(j1,7)
       -1       res_cons_scen(j1,8)
       -1       res_cons_scen(j1,9)
       -1       salvage_cons_scen(j1,1)
       -1       salvage_cons_scen(j1,2)
       -1       salvage_cons_scen(j1,3)
       -1       salvage_cons_scen(j1,4)
       -1       salvage_cons_scen(j1,5)
       -1       salvage_cons_scen(j1,6)
       -1       salvage_cons_scen(j1,7)
       -1       salvage_cons_scen(j1,8)
       -1       salvage_cons_scen(j1,9)

y(j2)
                (.LO, .L, .UP, .M = 0, 175, +INF, 0)
       30       obj_pois
       -1       res_cons_scen(j2,1)
       -1       res_cons_scen(j2,2)
       -1       res_cons_scen(j2,3)
       -1       res_cons_scen(j2,4)
       -1       res_cons_scen(j2,5)
       -1       res_cons_scen(j2,6)
       -1       res_cons_scen(j2,7)
       -1       res_cons_scen(j2,8)
       -1       res_cons_scen(j2,9)
       -1       salvage_cons_scen(j2,1)
       -1       salvage_cons_scen(j2,2)
       -1       salvage_cons_scen(j2,3)
       -1       salvage_cons_scen(j2,4)
       -1       salvage_cons_scen(j2,5)
       -1       salvage_cons_scen(j2,6)
       -1       salvage_cons_scen(j2,7)
       -1       salvage_cons_scen(j2,8)
       -1       salvage_cons_scen(j2,9)

y(j3)
                (.LO, .L, .UP, .M = 0, 60, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j3,1)
       -1       res_cons_scen(j3,2)
       -1       res_cons_scen(j3,3)
       -1       res_cons_scen(j3,4)
       -1       res_cons_scen(j3,5)
       -1       res_cons_scen(j3,6)
       -1       res_cons_scen(j3,7)
       -1       res_cons_scen(j3,8)
       -1       res_cons_scen(j3,9)
       -1       salvage_cons_scen(j3,1)
       -1       salvage_cons_scen(j3,2)
       -1       salvage_cons_scen(j3,3)
       -1       salvage_cons_scen(j3,4)
       -1       salvage_cons_scen(j3,5)
       -1       salvage_cons_scen(j3,6)
       -1       salvage_cons_scen(j3,7)
       -1       salvage_cons_scen(j3,8)
       -1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- z  how many parts j in J are not used (salvaged)

z(j1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -9)
       -1       obj_pois
        1       res_cons_scen(j1,1)
        1       res_cons_scen(j1,2)
        1       res_cons_scen(j1,3)
        1       res_cons_scen(j1,4)
        1       res_cons_scen(j1,5)
        1       res_cons_scen(j1,6)
        1       res_cons_scen(j1,7)
        1       res_cons_scen(j1,8)
        1       res_cons_scen(j1,9)
        1       salvage_cons_scen(j1,1)
        1       salvage_cons_scen(j1,2)
        1       salvage_cons_scen(j1,3)
        1       salvage_cons_scen(j1,4)
        1       salvage_cons_scen(j1,5)
        1       salvage_cons_scen(j1,6)
        1       salvage_cons_scen(j1,7)
        1       salvage_cons_scen(j1,8)
        1       salvage_cons_scen(j1,9)

z(j2)
                (.LO, .L, .UP, .M = 0, 0, +INF, -22)
       -8       obj_pois
        1       res_cons_scen(j2,1)
        1       res_cons_scen(j2,2)
        1       res_cons_scen(j2,3)
        1       res_cons_scen(j2,4)
        1       res_cons_scen(j2,5)
        1       res_cons_scen(j2,6)
        1       res_cons_scen(j2,7)
        1       res_cons_scen(j2,8)
        1       res_cons_scen(j2,9)
        1       salvage_cons_scen(j2,1)
        1       salvage_cons_scen(j2,2)
        1       salvage_cons_scen(j2,3)
        1       salvage_cons_scen(j2,4)
        1       salvage_cons_scen(j2,5)
        1       salvage_cons_scen(j2,6)
        1       salvage_cons_scen(j2,7)
        1       salvage_cons_scen(j2,8)
        1       salvage_cons_scen(j2,9)

z(j3)
                (.LO, .L, .UP, .M = 0, 0, +INF, -8)
       -2       obj_pois
        1       res_cons_scen(j3,1)
        1       res_cons_scen(j3,2)
        1       res_cons_scen(j3,3)
        1       res_cons_scen(j3,4)
        1       res_cons_scen(j3,5)
        1       res_cons_scen(j3,6)
        1       res_cons_scen(j3,7)
        1       res_cons_scen(j3,8)
        1       res_cons_scen(j3,9)
        1       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j3,4)
        1       salvage_cons_scen(j3,5)
        1       salvage_cons_scen(j3,6)
        1       salvage_cons_scen(j3,7)
        1       salvage_cons_scen(j3,8)
        1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- x_scen  how many products i in I to produce and sell in each scenario r in R

x_scen(i1,1)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
       -7       obj_pois
       10       res_cons_scen(j1,1)
        5       res_cons_scen(j2,1)
        5       res_cons_scen(j3,1)
        1       res_cons_scen(j4,1)
        1       res_cons_scen(j5,1)
       10       salvage_cons_scen(j1,1)
        5       salvage_cons_scen(j2,1)
        5       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j4,1)
        1       salvage_cons_scen(j5,1)

x_scen(i1,2)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -14       obj_pois
       10       res_cons_scen(j1,2)
        5       res_cons_scen(j2,2)
        5       res_cons_scen(j3,2)
        1       res_cons_scen(j4,2)
        1       res_cons_scen(j5,2)
       10       salvage_cons_scen(j1,2)
        5       salvage_cons_scen(j2,2)
        5       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j4,2)
        1       salvage_cons_scen(j5,2)

x_scen(i1,3)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -49       obj_pois
       10       res_cons_scen(j1,3)
        5       res_cons_scen(j2,3)
        5       res_cons_scen(j3,3)
        1       res_cons_scen(j4,3)
        1       res_cons_scen(j5,3)
       10       salvage_cons_scen(j1,3)
        5       salvage_cons_scen(j2,3)
        5       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j4,3)
        1       salvage_cons_scen(j5,3)

REMAINING 15 ENTRIES SKIPPED

---- x_pois  

x_pois(i1,s1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s1)

x_pois(i1,s2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s2)

x_pois(i1,s3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s3)

REMAINING 197 ENTRIES SKIPPED

---- profit_pois  

profit_pois
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj_pois

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 36
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Range Statistics    SOLVE multi_product_pois Using MIP From line 168


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.000E+00, 3.300E+01] - Zero values observed as well
Bound     [min, max] : [        NA,        NA] - Zero values observed as well
Matrix    [min, max] : [ 1.000E+00, 1.176E+03]

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 37
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE multi_product_pois Using MIP From line 168


LOOPS                           numScenarios   1600


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS          291
BLOCKS OF VARIABLES           5     SINGLE VARIABLES          229
NON ZERO ELEMENTS           571


GENERATION TIME      =        0.000 SECONDS      4 MB  45.1.0 88bbff72 WEX-WEI
               L O O P S         numScenarios 1600

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 38
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE multi_product_pois Using MIP From line 168


               S O L V E      S U M M A R Y

     MODEL   multi_product_pois   OBJECTIVE  profit_pois
     TYPE    MIP                  DIRECTION  MAXIMIZE
     SOLVER  CPLEX                FROM LINE  168

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      19 Infeasible - No Solution
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.000 10000000000.000
 ITERATION COUNT, LIMIT         0    2147483647
--- GAMS/CPLEX licensed for continuous and discrete problems.
--- GMO setup time: 0.00s
--- Space for names approximately 0.01 Mb
--- Use option 'names no' to turn use of names off
--- GMO memory 0.56 Mb (peak 0.56 Mb)
--- Dictionary memory 0.00 Mb
--- Cplex 22.1.1.0 link memory 0.01 Mb (peak 0.03 Mb)
--- Starting Cplex


--- LP status (4): unbounded or infeasible.
--- Cplex Time: 0.00sec (det. 0.08 ticks)

*** WARNING: Presolve found the problem infeasible or unbounded
--- Cplex diagnoses the model to be either infeasible or unbounded.
--- There is no such GAMS Model Status so returning with a status of infeasible.
--- Model has been proven to be either infeasible or unbounded

No solution returned
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 39
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE multi_product_pois Using MIP From line 168


---- obj_pois  =E=  

obj_pois..  10*y(j1) + 30*y(j2) + 10*y(j3) + 100*y(j4) + 50*y(j5) - z(j1) - 8*z(j2) - 2*z(j3) - 30*z(j4) - 10*z(j5) - 7*x_scen(i1,1) - 14*x_scen(i1,2) - 49*x_scen(i1,3) - 14*x_scen(i1,4) - 28*x_scen(i1,5) - 98*x_scen(i1,6) - 49*x_scen(i1,7) - 98*x_scen(i1,8) - 343*x_scen(i1,9) - 24*x_scen(i2,1) - 48*x_scen(i2,2) - 168*x_scen(i2,3) - 48*x_scen(i2,4) - 96*x_scen(i2,5) - 336*x_scen(i2,6) - 168*x_scen(i2,7) - 336*x_scen(i2,8) - 1176*x_scen(i2,9) + profit_pois =E= 0 ; (LHS = -46024, INFES = 46024 ****)
     

---- res_cons_scen  =L=  

res_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
res_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
res_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED


---- demand_cons_pois  =L=  

demand_cons_pois(i1,s1)..  x_pois(i1,s1) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s2)..  x_pois(i1,s2) =L= 9 ; (LHS = 0)
     
demand_cons_pois(i1,s3)..  x_pois(i1,s3) =L= 15 ; (LHS = 0)
     
REMAINING 197 ENTRIES SKIPPED


---- salvage_cons_scen  =L=  

salvage_cons_scen(j1,1)..  - y(j1) + z(j1) + 10*x_scen(i1,1) + 8*x_scen(i2,1) =L= 0 ; (LHS = -114)
     
salvage_cons_scen(j1,2)..  - y(j1) + z(j1) + 10*x_scen(i1,2) + 8*x_scen(i2,2) =L= 0 ; (LHS = -90)
     
salvage_cons_scen(j1,3)..  - y(j1) + z(j1) + 10*x_scen(i1,3) + 8*x_scen(i2,3) =L= 0 ; (LHS = -50)
     
REMAINING 42 ENTRIES SKIPPED

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 40
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE multi_product_pois Using MIP From line 168


---- y  how many parts j in J to order

y(j1)
                (.LO, .L, .UP, .M = 0, 300, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j1,1)
       -1       res_cons_scen(j1,2)
       -1       res_cons_scen(j1,3)
       -1       res_cons_scen(j1,4)
       -1       res_cons_scen(j1,5)
       -1       res_cons_scen(j1,6)
       -1       res_cons_scen(j1,7)
       -1       res_cons_scen(j1,8)
       -1       res_cons_scen(j1,9)
       -1       salvage_cons_scen(j1,1)
       -1       salvage_cons_scen(j1,2)
       -1       salvage_cons_scen(j1,3)
       -1       salvage_cons_scen(j1,4)
       -1       salvage_cons_scen(j1,5)
       -1       salvage_cons_scen(j1,6)
       -1       salvage_cons_scen(j1,7)
       -1       salvage_cons_scen(j1,8)
       -1       salvage_cons_scen(j1,9)

y(j2)
                (.LO, .L, .UP, .M = 0, 175, +INF, 0)
       30       obj_pois
       -1       res_cons_scen(j2,1)
       -1       res_cons_scen(j2,2)
       -1       res_cons_scen(j2,3)
       -1       res_cons_scen(j2,4)
       -1       res_cons_scen(j2,5)
       -1       res_cons_scen(j2,6)
       -1       res_cons_scen(j2,7)
       -1       res_cons_scen(j2,8)
       -1       res_cons_scen(j2,9)
       -1       salvage_cons_scen(j2,1)
       -1       salvage_cons_scen(j2,2)
       -1       salvage_cons_scen(j2,3)
       -1       salvage_cons_scen(j2,4)
       -1       salvage_cons_scen(j2,5)
       -1       salvage_cons_scen(j2,6)
       -1       salvage_cons_scen(j2,7)
       -1       salvage_cons_scen(j2,8)
       -1       salvage_cons_scen(j2,9)

y(j3)
                (.LO, .L, .UP, .M = 0, 60, +INF, 0)
       10       obj_pois
       -1       res_cons_scen(j3,1)
       -1       res_cons_scen(j3,2)
       -1       res_cons_scen(j3,3)
       -1       res_cons_scen(j3,4)
       -1       res_cons_scen(j3,5)
       -1       res_cons_scen(j3,6)
       -1       res_cons_scen(j3,7)
       -1       res_cons_scen(j3,8)
       -1       res_cons_scen(j3,9)
       -1       salvage_cons_scen(j3,1)
       -1       salvage_cons_scen(j3,2)
       -1       salvage_cons_scen(j3,3)
       -1       salvage_cons_scen(j3,4)
       -1       salvage_cons_scen(j3,5)
       -1       salvage_cons_scen(j3,6)
       -1       salvage_cons_scen(j3,7)
       -1       salvage_cons_scen(j3,8)
       -1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- z  how many parts j in J are not used (salvaged)

z(j1)
                (.LO, .L, .UP, .M = 0, 0, +INF, -9)
       -1       obj_pois
        1       res_cons_scen(j1,1)
        1       res_cons_scen(j1,2)
        1       res_cons_scen(j1,3)
        1       res_cons_scen(j1,4)
        1       res_cons_scen(j1,5)
        1       res_cons_scen(j1,6)
        1       res_cons_scen(j1,7)
        1       res_cons_scen(j1,8)
        1       res_cons_scen(j1,9)
        1       salvage_cons_scen(j1,1)
        1       salvage_cons_scen(j1,2)
        1       salvage_cons_scen(j1,3)
        1       salvage_cons_scen(j1,4)
        1       salvage_cons_scen(j1,5)
        1       salvage_cons_scen(j1,6)
        1       salvage_cons_scen(j1,7)
        1       salvage_cons_scen(j1,8)
        1       salvage_cons_scen(j1,9)

z(j2)
                (.LO, .L, .UP, .M = 0, 0, +INF, -22)
       -8       obj_pois
        1       res_cons_scen(j2,1)
        1       res_cons_scen(j2,2)
        1       res_cons_scen(j2,3)
        1       res_cons_scen(j2,4)
        1       res_cons_scen(j2,5)
        1       res_cons_scen(j2,6)
        1       res_cons_scen(j2,7)
        1       res_cons_scen(j2,8)
        1       res_cons_scen(j2,9)
        1       salvage_cons_scen(j2,1)
        1       salvage_cons_scen(j2,2)
        1       salvage_cons_scen(j2,3)
        1       salvage_cons_scen(j2,4)
        1       salvage_cons_scen(j2,5)
        1       salvage_cons_scen(j2,6)
        1       salvage_cons_scen(j2,7)
        1       salvage_cons_scen(j2,8)
        1       salvage_cons_scen(j2,9)

z(j3)
                (.LO, .L, .UP, .M = 0, 0, +INF, -8)
       -2       obj_pois
        1       res_cons_scen(j3,1)
        1       res_cons_scen(j3,2)
        1       res_cons_scen(j3,3)
        1       res_cons_scen(j3,4)
        1       res_cons_scen(j3,5)
        1       res_cons_scen(j3,6)
        1       res_cons_scen(j3,7)
        1       res_cons_scen(j3,8)
        1       res_cons_scen(j3,9)
        1       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j3,4)
        1       salvage_cons_scen(j3,5)
        1       salvage_cons_scen(j3,6)
        1       salvage_cons_scen(j3,7)
        1       salvage_cons_scen(j3,8)
        1       salvage_cons_scen(j3,9)

REMAINING 2 ENTRIES SKIPPED

---- x_scen  how many products i in I to produce and sell in each scenario r in R

x_scen(i1,1)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
       -7       obj_pois
       10       res_cons_scen(j1,1)
        5       res_cons_scen(j2,1)
        5       res_cons_scen(j3,1)
        1       res_cons_scen(j4,1)
        1       res_cons_scen(j5,1)
       10       salvage_cons_scen(j1,1)
        5       salvage_cons_scen(j2,1)
        5       salvage_cons_scen(j3,1)
        1       salvage_cons_scen(j4,1)
        1       salvage_cons_scen(j5,1)

x_scen(i1,2)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -14       obj_pois
       10       res_cons_scen(j1,2)
        5       res_cons_scen(j2,2)
        5       res_cons_scen(j3,2)
        1       res_cons_scen(j4,2)
        1       res_cons_scen(j5,2)
       10       salvage_cons_scen(j1,2)
        5       salvage_cons_scen(j2,2)
        5       salvage_cons_scen(j3,2)
        1       salvage_cons_scen(j4,2)
        1       salvage_cons_scen(j5,2)

x_scen(i1,3)
                (.LO, .L, .UP, .M = 0, 5, +INF, 0)
      -49       obj_pois
       10       res_cons_scen(j1,3)
        5       res_cons_scen(j2,3)
        5       res_cons_scen(j3,3)
        1       res_cons_scen(j4,3)
        1       res_cons_scen(j5,3)
       10       salvage_cons_scen(j1,3)
        5       salvage_cons_scen(j2,3)
        5       salvage_cons_scen(j3,3)
        1       salvage_cons_scen(j4,3)
        1       salvage_cons_scen(j5,3)

REMAINING 15 ENTRIES SKIPPED

---- x_pois  

x_pois(i1,s1)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s1)

x_pois(i1,s2)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s2)

x_pois(i1,s3)
                (.LO, .L, .UP, .M = 0, 0, +INF, 0)
        1       demand_cons_pois(i1,s3)

REMAINING 197 ENTRIES SKIPPED

---- profit_pois  

profit_pois
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       obj_pois

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 41
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Range Statistics    SOLVE multi_product_pois Using MIP From line 168


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.000E+00, 3.300E+01] - Zero values observed as well
Bound     [min, max] : [        NA,        NA] - Zero values observed as well
Matrix    [min, max] : [ 1.000E+00, 1.176E+03]

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 42
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE multi_product_pois Using MIP From line 168


LOOPS                           numScenarios   10000


MODEL STATISTICS

BLOCKS OF EQUATIONS           4     SINGLE EQUATIONS          291
BLOCKS OF VARIABLES           5     SINGLE VARIABLES          229
NON ZERO ELEMENTS           571


GENERATION TIME      =        0.015 SECONDS      4 MB  45.1.0 88bbff72 WEX-WEI
               L O O P S         numScenarios 10000

GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 43
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE multi_product_pois Using MIP From line 168


               S O L V E      S U M M A R Y

     MODEL   multi_product_pois   OBJECTIVE  profit_pois
     TYPE    MIP                  DIRECTION  MAXIMIZE
     SOLVER  CPLEX                FROM LINE  168

**** SOLVER STATUS     1 Normal Completion
**** MODEL STATUS      19 Infeasible - No Solution
**** OBJECTIVE VALUE               NA

 RESOURCE USAGE, LIMIT          0.000 10000000000.000
 ITERATION COUNT, LIMIT         0    2147483647
--- GAMS/CPLEX licensed for continuous and discrete problems.
--- GMO setup time: 0.00s
--- Space for names approximately 0.01 Mb
--- Use option 'names no' to turn use of names off
--- GMO memory 0.56 Mb (peak 0.56 Mb)
--- Dictionary memory 0.00 Mb
--- Cplex 22.1.1.0 link memory 0.01 Mb (peak 0.03 Mb)
--- Starting Cplex


--- LP status (4): unbounded or infeasible.
--- Cplex Time: 0.00sec (det. 0.08 ticks)

*** WARNING: Presolve found the problem infeasible or unbounded
--- Cplex diagnoses the model to be either infeasible or unbounded.
--- There is no such GAMS Model Status so returning with a status of infeasible.
--- Model has been proven to be either infeasible or unbounded

No solution returned
GAMS 45.1.0  88bbff72 Oct 14, 2023          WEX-WEI x86 64bit/MS Windows - 12/08/23 20:01:23 Page 44
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


----    172 PARAMETER results  Objective and first stage variables

                      ( ALL       0.000 )



EXECUTION TIME       =        0.562 SECONDS      4 MB  45.1.0 88bbff72 WEX-WEI


USER: Introduction to Optimization (CS/ISyE/ECE 524) G230906|0002AS-GEN
      UW-Madison, CS Dept., Fall 2023, Prof. Ferris              DCE850
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\Rocke\OneDrive\Documents\isye524\hw\hw10\hw10-2.gms
Output     C:\Users\Rocke\OneDrive\Documents\isye524\hw\hw10\hw10-2.lst
